<table class="plainlinks ombox ombox-move" role="presentation"><tr><td class="mbox-image">[[File:Merge-arrows.svg|50px|alt=|link=]]</td><td class="mbox-text">It has been suggested that this page be [[Wikipedia:Merging|merged]] with ''[[:Special:Comparison of programming languages (string functions)|comparison of programming languages (string functions)]]''. ([[:|Discuss]])<small>'' Proposed since February 2012.''</small></td></tr></table>[[Category:  Items to be merged]]
<table class="metadata plainlinks ambox ambox-content ambox-Unreferenced" role="presentation"><tr><td class="mbox-image"><div style="width:52px;">[[File:Question book-new.svg|50x40px]]</div></td><td class="mbox-text"><span class="mbox-text-span">This article '''does not [[Wikipedia:Citing sources|cite]] any [[Wikipedia:Verifiability|references or sources]]'''.<span class="hide-when-compact"> Please help [//en.wikipedia.org/w/index.php?title=Special:ExpandTemplates&action=edit improve this article] by [[Help:Introduction to referencing/1|adding citations to reliable sources]]. Unsourced material may be challenged and [[Wikipedia:Verifiability#Burden of evidence|removed]].</span>  <small>''(February 2009)''</small><span class="hide-when-compact"></span></span></td></tr></table>
<table class="vertical-navbox nowraplinks " cellspacing="5" cellpadding="0" style="float:right;clear:right;width:22.0em;margin:0 0 1.0em 1.0em;background:#f9f9f9;border:1px solid #aaa;padding:0.2em;border-spacing:0.4em 0;text-align:center;line-height:1.4em;font-size:88%;"><tr><th class="" style=";padding:0.2em 0.4em 0.2em;;font-size:145%;line-height:1.2em;">[[Comparison of programming languages|Programming language comparisons]]</th>
      </tr><tr>
<td class="" style="padding:0 0.1em 0.4em;text-align: left;">
* [[Comparison of programming languages|General comparison]]
* [[Comparison of programming languages (syntax)|Basic syntax]]
* [[Comparison of programming languages (basic instructions)|Basic instructions]]
* [[Comparison of programming languages (array)|Arrays]]
* [[Comparison of programming languages (mapping)|Associative arrays]]
* [[Comparison of programming languages (strings)|String operations]]
* [[Comparison of programming languages (string functions)|String functions]]
* [[Comparison of programming languages (list comprehension)|List comprehension]]
* [[Comparison of programming languages (object-oriented programming)|Object-oriented programming]]
* [[Constructor (object-oriented programming)|Object-oriented constructors]]
* [[Comparison of database access|Database access]]</td>
</tr><tr>
<td class="" style="padding:0 0.1em 0.4em;text-align: left;">
* [[Evaluation strategy]]
* [[b:Computer Programming/Hello world|List of "Hello World" programs]]</td>
</tr><tr>
<td class="" style="padding:0 0.1em 0.4em;text-align: left;">
* [[Comparison of web application frameworks|Web application frameworks]]
* [[Comparison of the Java and .NET platforms]]</td>
</tr><tr>
<td class="" style="padding:0 0.1em 0.4em;text-align: left;">
* Comparison of individual programming languages
** [[ALGOL 58#ALGOL 58's influence on ALGOL 60|ALGOL 58's influence on ALGOL 60]]
** [[ALGOL 60#Comparisons with other languages|ALGOL 60: Comparisons with other languages]]
** [[Comparison of ALGOL 68 and C++]]
** [[ALGOL 68#Comparisons with other languages|ALGOL 68: Comparisons with other languages]]
** [[Compatibility of C and C++]]
** [[Comparison of Pascal and Delphi|Comparison of Pascal and Borland Delphi]]
** [[Comparison of Object Pascal and C]]
** [[Comparison of Pascal and C]]
** [[Comparison of Java and C++]]
** [[Comparison of C Sharp and Java|Comparison of C# and Java]]
** [[Comparison of C Sharp and Visual Basic .NET|Comparison of C# and Visual Basic .NET]]
** [[Comparison of Visual Basic and Visual Basic .NET]]</td>
</tr><tr><td style="text-align:right;font-size:115%;"><div class="plainlinks hlist navbar mini" style=""><ul><li class="nv-view">[[Template:Programming language comparisons|<span title="View this template" style="">v</span>]]</li><li class="nv-talk">[[Template talk:Programming language comparisons|<span title="Discuss this template" style="">t</span>]]</li><li class="nv-edit">[//en.wikipedia.org/w/index.php?title=Template:Programming_language_comparisons&action=edit <span title="Edit this template" style="">e</span>]</li></ul></div></td></tr>
</table>

This '''comparison of programming languages (strings)''' compares the features of [[string (computer science)|string]] [[data structure]]s or [[text string|text-string]] processing for over 52 various computer [[programming language]]s.

== Concatenation ==
Different languages use different symbols for the concatenation operator. Many languages use the "+" symbol, though several deviate from this.

===Common variants===

{| class="wikitable"
|-
! Operator
! Languages
|-
| +
| [[ALGOL 68]], [[BASIC programming language|BASIC]], [[C++]], [[C Sharp (programming language)|C#]], [[Pascal programming language|Pascal]], [[Object Pascal]], [[Eiffel (programming language)|Eiffel]], [[Go (programming language)|Go]], [[JavaScript]], [[Java (programming language)|Java]], [[Python (programming language)|Python]], [[Turing (programming language)|Turing]], [[Ruby programming language|Ruby]], [[Windows PowerShell]], [[Objective-C]], [[F Sharp (programming language)|F#]], [[Scala (programming language)|Scala]], Ya
|-
| ++
| [[Haskell (programming language)|Haskell]], [[Erlang (programming language)|Erlang]]
|-
| $+
| [[MIRC scripting language|mIRC Scripting Language]]
|-
| &
| [[Ada (programming language)|Ada]], [[AppleScript]], [[COBOL]] (for literals only), [[Curl programming language|Curl]], [[Seed7]], [[VHDL]], [[Visual Basic]], [[Microsoft Excel|Excel]], [[FreeBASIC]]
|-
| nconc
| [[Common Lisp]]
|-
| .
| [[Perl]] (before version 6), [[PHP]], and [[Maple computer algebra system|Maple]] (up to version 5), Autohotkey
|-
| ~ 
| [[Perl 6]] and [[D programming language|D]] 
|-
| 
| [[Icon (programming language)|Icon]], Standard [[SQL]], [[PL/I]], [[Rexx]], and [[Maple computer algebra system|Maple]] (from version 6)
|-
| <>
| [[Mathematica]] 
|-
| ..
| [[Lua programming language|Lua]]
|-
|, 
| [[J programming language]], [[Smalltalk]]
|-
| ^
| [[OCaml]], [[Standard ML]], [[F Sharp (programming language)|F#]], [[rc]]
|-
| //
| [[Fortran]]
|}

===Unique variants===

* [[Awk]] uses the empty string: two expressions adjacent to each other are concatenated. This is called [[Juxtaposition (literary)|juxtaposition]]. [[Unix shell]]s have a similar syntax. [[Rexx]] uses this syntax for concatenation including an intervening space.
* [[C (programming language)|C]] allows juxtaposition for string literals, however, for strings stored as [[Character (computing)|character]] [[Array data structure|arrays]], the <code>[[strcat]]</code> function must be used.
* [[COBOL]] uses the <code>STRING</code> statement to concatenate string variables.
* [[MATLAB]] and [[Octave programming language|Octave]] use the syntax "<code>[x y]</code>" to concatenate x and y.
* [[Visual Basic]] Versions 1 to 6 can also use the "<code>+</code>" sign but, this leads to ambiguity if a string representing a number and a number is added together.
* [[Microsoft Excel]] allows both "<code>&</code>" and the function "<code>=CONCATENATE(X,Y)</code>".

== String literals ==
This section compares styles for declaring a [[string literal]].

=== Quoted raw ===
"Raw" meaning that the interpreter/compiler does not recognize any variable or constant identifiers located inside the string and the content of the identifier will not replace the identifier in the string.
{| class="wikitable"
|-
! Syntax
! Language(s)
|-
| <tt>@"Hello, world!"</tt>
| C#, F#
|-
| <tt>"Hello, world!"</tt>
| Cobol, FreeBASIC, Java, JavaScript 
|-
| <tt>r"Hello, world!"</tt>
| Python
|-
| <tt>'Hello, world!'</tt>
| Fortran, JavaScript, Object Pascal, Pascal, Perl,  PHP, Windows PowerShell,
|-
| <tt>`Hello, world!`</tt>
| Go, Smalltalk
|}

=== Quoted interpolated ===
"Interpolated" means that the interpreter/compiler does recognize a variable or constant identifier located inside the string and the content of the identifier will replace the identifier in the string. 
{| class="wikitable"
|-
! Syntax
! Language(s)
|-
| <tt>"Hello, $name!"</tt>
| PHP, Perl, Windows PowerShell, Bash shell
|-
| <tt>"Hello, #{name}!"</tt>
| Ruby
|-
| <tt>(format t "Hello, ~A" name)</tt>
|Common Lisp
|}

=== Escaped quotes ===
"Escaped" quotes means that a 'flag' symbol is used to warn that the character after the flag is used in the string rather than ending the string.
{| class="wikitable"
|-
! Syntax
! Language(s)
|-
| <tt>"I said \"Hello, world!\""</tt>
| C, C++, C#, F#, Java, Ocaml, Perl, Python, JavaScript, Mathematica, Ya
|-
| <tt>"I said `"Hello, world!`""</tt>
| Windows Powershell
|-
| <tt>"I said ^"Hello, world!^""</tt>
| REBOL
|-
| <tt>"I said, %"Hello, World!%""</tt>
| Eiffel
|-
| <tt>!"I said \"Hello, world!\""</tt>
| FreeBASIC
|}

=== Dual quoting ===
"Dual quoting" means that whenever a quote is used in a string, it is used twice, and one of them is discarded and the single quote is then used within the string.
{| class="wikitable"
|-
! Syntax
! Language(s)
|-
| <tt>"I said ""Hello, world!"""</tt>
| Ada, ALGOL 68, Excel, Fortran, Visual Basic, FreeBASIC, COBOL
|-
| <tt></tt>
| Fortran, rc
|}

<table class="metadata plainlinks ambox mbox-small-left ambox-content" role="presentation"><tr><td class="mbox-image">[[File:Wiki letter w cropped.svg|20px|alt=&#91;icon&#93;]]</td><td class="mbox-text"><span class="mbox-text-span">This section requires [//en.wikipedia.org/w/index.php?title=Special:ExpandTemplates&action=edit expansion].  <small>''(June 2008)''</small></span></td></tr></table>

=== Multiple quoting ===

{| class="wikitable"
|-
! Syntax
! Language(s)
|-
| <tt>q(I said "Hello, world!")
qq(I said "Hello, $name!")</tt>
| Perl (raw & interpolated)
|-
| <tt>%Q(I said "Hello, world!")
%(I said "Hello, world!")</tt>
| Ruby
|-
| <tt>{I said "Hello, world!"}</tt>
| REBOL
|}

=== Here document ===

{| class="wikitable" border="1"
|-
! Syntax
! Language(s)
|-
| <tt><<EOF<br />I have a lot of things to say<br />and so little time to say them<br />EOF</tt>
| Perl, PHP, Ruby
|-
| <tt>@"<br />I have a lot of things to say<br />and so little time to say them<br />"@</tt>
| Windows Powershell
|-
| <tt>"[<br />I have a lot of things to say<br />and so little time to say them<br />]"</tt>
| Eiffel
|-
| <tt>"""<br />I have a lot of things to say<br />and so little time to say them<br />"""</tt>
| CoffeeScript
|}

=== Unique quoting variants ===
{| class="wikitable"
|-
! Syntax
! Variant name
! Language(s)
|-
| <tt>′I said ′′Hello, world!′′.′</tt>
| Double quoting
| Smalltalk
|-
| <tt>'I said '&#39;Hello, world!&#39;'.'</tt>
| Double quoting
| Pascal, Object Pascal, SQL standard
|-
| <tt>"""Hello, world!"""</tt>
| Triple quoting
| Python
|-
| <tt>13HHello, world!</tt>
| Hollerith notation
| Fortran 66
|-
| (indented with whitespace)
| Indented with whitespace and newlines
| YAML
|}



[[Category:Programming language comparisons]]
[[Category:String (computer science)]]
