<table class="vertical-navbox nowraplinks " cellspacing="5" cellpadding="0" style="float:right;clear:right;width:22.0em;margin:0 0 1.0em 1.0em;background:#f9f9f9;border:1px solid #aaa;padding:0.2em;border-spacing:0.4em 0;text-align:center;line-height:1.4em;font-size:88%;"><tr><th class="" style=";padding:0.2em 0.4em 0.2em;;font-size:145%;line-height:1.2em;">[[Comparison of programming languages|Programming language comparisons]]</th>
      </tr><tr>
<td class="" style="padding:0 0.1em 0.4em;text-align: left;">
* [[Comparison of programming languages|General comparison]]
* [[Comparison of programming languages (syntax)|Basic syntax]]
* [[Comparison of programming languages (basic instructions)|Basic instructions]]
* [[Comparison of programming languages (array)|Arrays]]
* [[Comparison of programming languages (mapping)|Associative arrays]]
* [[Comparison of programming languages (strings)|String operations]]
* [[Comparison of programming languages (string functions)|String functions]]
* [[Comparison of programming languages (list comprehension)|List comprehension]]
* [[Comparison of programming languages (object-oriented programming)|Object-oriented programming]]
* [[Constructor (object-oriented programming)|Object-oriented constructors]]
* [[Comparison of database access|Database access]]</td>
</tr><tr>
<td class="" style="padding:0 0.1em 0.4em;text-align: left;">
* [[Evaluation strategy]]
* [[b:Computer Programming/Hello world|List of "Hello World" programs]]</td>
</tr><tr>
<td class="" style="padding:0 0.1em 0.4em;text-align: left;">
* [[Comparison of web application frameworks|Web application frameworks]]
* [[Comparison of the Java and .NET platforms]]</td>
</tr><tr>
<td class="" style="padding:0 0.1em 0.4em;text-align: left;">
* Comparison of individual programming languages
** [[ALGOL 58#ALGOL 58's influence on ALGOL 60|ALGOL 58's influence on ALGOL 60]]
** [[ALGOL 60#Comparisons with other languages|ALGOL 60: Comparisons with other languages]]
** [[Comparison of ALGOL 68 and C++]]
** [[ALGOL 68#Comparisons with other languages|ALGOL 68: Comparisons with other languages]]
** [[Compatibility of C and C++]]
** [[Comparison of Pascal and Delphi|Comparison of Pascal and Borland Delphi]]
** [[Comparison of Object Pascal and C]]
** [[Comparison of Pascal and C]]
** [[Comparison of Java and C++]]
** [[Comparison of C Sharp and Java|Comparison of C# and Java]]
** [[Comparison of C Sharp and Visual Basic .NET|Comparison of C# and Visual Basic .NET]]
** [[Comparison of Visual Basic and Visual Basic .NET]]</td>
</tr><tr><td style="text-align:right;font-size:115%;"><div class="plainlinks hlist navbar mini" style=""><ul><li class="nv-view">[[Template:Programming language comparisons|<span title="View this template" style="">v</span>]]</li><li class="nv-talk">[[Template talk:Programming language comparisons|<span title="Discuss this template" style="">t</span>]]</li><li class="nv-edit">[//en.wikipedia.org/w/index.php?title=Template:Programming_language_comparisons&action=edit <span title="Edit this template" style="">e</span>]</li></ul></div></td></tr>
</table>
[[Programming language]]s are used for controlling the behavior of a machine (often a [[computer]]). Like [[natural language]]s, programming languages conform to rules for [[syntax]] and [[semantics]].

There are [[list of programming languages|thousands of programming languages]] and new ones are created every year. Few languages ever become sufficiently popular that they are used by more than a few people, but professional [[programmer]]s may use dozens of languages in a career.

__TOC__
<br style="clear:both;" />

==General comparison==
The following table compares general and technical information for a selection of commonly used [[programming language]]s. See the individual languages' articles for further information. Please note that the following table may be missing some information.

{|class="wikitable sortable" style="text-align:center;

|- align="center"
! Language
! Intended use 
! style="font-size:xx-small;" | [[imperative programming|Imperative]]
! style="font-size:xx-small;" | [[object-oriented programming|Object-Oriented]]
! style="font-size:xx-small;" | [[functional programming|Functional]]
! style="font-size:xx-small;" | [[procedural programming|Procedural]]
! style="font-size:xx-small;" | [[generic programming|Generic]]
! style="font-size:xx-small;" | [[reflective programming|Reflective]]
! style="font-size:xx-small;" | [[event-driven programming|Event-Driven]]
! Other [[programming paradigm|Paradigm]](s)
! [[standardization|Standardized]]?

|- align="center"
! [[ActionScript]] 3.0 
| Application, client-side, Web 

| X 
| X 
| 
| 
| 
| 
| X 

| 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|1996, ECMA 

|- align="center"
! [[Ada (programming language)|Ada]] 
| Application, embedded, realtime, [[System programming language|system]] 

| X 
| X 
| 
| X 
| X 
| 
| 

| [[concurrent programming language|concurrent]], [[distributed programming|distributed]], imperative object-oriented 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|1983, 2005, 2012, ANSI, ISO, [[GOST]] 27831-88 

|- align="center"
! [[Aldor]] 
| Highly domain-specific, symbolic computing 

| X 
| X 
| X 
| 
| 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[ALGOL 58]] 
| Application 

| X 
| 
| 
| 
| 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[ALGOL 60]] 
| Application 

| X 
| 
| 
| 
| 
| 
| 

| 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|1960, [[IFIP WG 2.1]], ISO 

|- align="center"
! [[ALGOL 68]] 
| Application 

| X 
| 
| 
| 
| 
| 
| 

| concurrent 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|1968, [[IFIP WG 2.1]], [[GOST 27974-88]], 

|- align="center"
! [[Ateji PX]] 
| Parallel application 

| 
| X 
| 
| 
| 
| 
| 

| [[pi calculus]] 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[APL (programming language)|APL]] 
| Application, data processing 

| 
| 
| 
| 
| 
| 
| 

| [[array programming|array-oriented]], [[tacit programming|tacit]] 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|1989, ISO 

|- align="center"
! [[Assembly language]] 
| [[General purpose programming language|General]] 

| X 
| 
| 
| 
| 
| 
| 

| any, syntax is usually highly specific, related to the target processor 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[AutoHotkey]] 
| GUI automation (macros), highly domain-specific 

| X 
| 
| 
| 
| 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[AutoIt]] 
| GUI automation (macros), highly domain-specific 

| X 
| 
| 
| X 
| 
| 
| X 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[BASIC]] 
| Application, education 

| X 
| 
| 
| X 
| 
| 
| 

| 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|1983, [http://portal.acm.org/citation.cfm?id=988221 ANSI], ISO 

|- align="center"
! [[BBj]] 
| Application, business, Web 

| 
| X 
| 
| X 
| 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[BeanShell]] 
| Application, scripting 

| X 
| X 
| X 
| 
| 
| X 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|In progress, [[Java Community Process|JCP]] 

|- align="center"
! [[BitC]] 
| System 

| X 
| 
| X 
| 
| 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[BLISS]] 
| System 

| 
| 
| 
| X 
| 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[BlitzMax]] 
| Application, game 

| X 
| X 
| 
| X 
| 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Boo (programming language)|Boo]] 
| Application 

| 
| 
| 
| 
| 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Bro (software)|Bro]] 
| domain-specific, application 

| X 
| 
| 
| 
| 
| 
| X 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[C (programming language)|C]] 
| Application, system, general purpose, low-level operations 

| X 
| 
| 
| X 
| 
| 
| 

| 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|1989, [[ANSI C|ANSI C89, ISO C90, ISO C99, ISO C11]] 

|- align="center"
! [[C++]] 
| Application, system 

| X 
| X 
| X 
| X 
| X 
| 
| 

| 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|1998, ISO/IEC 1998, ISO/IEC 2003, ISO/IEC 2011 

|- align="center"
! [[C Sharp (programming language)|C#]] 
| Application, RAD, business, client-side, general, server-side, Web, Robotics 

| X 
| X 
| X 
| 
| X 
| X 
| X 

| structured, concurrent 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|2000, ECMA, ISO 

|- align="center"
! [[Clarion (programming language)|Clarion]] 
| General, business, Web 

| X 
| X 
| X 
| 
| 
| 
| 

| 
|style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown

|- align="center"
! [[Clean (programming language)|Clean]] 
| General 

| 
| 
| X 
| 
| X 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Clojure]] 
| General 

| 
| 
| X 
| 
| 
| 
| 

| concurrent 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[CLU (programming language)|CLU]] 
| General 

| X 
| X 
| 
| X 
| X 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[COBOL]] 
| Application, business 

| X 
| X 
| 
| 
| 
| 
| 

| 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|2002 (ISO/IEC 1989) 

|- align="center"
! [[Cobra (programming language)|Cobra]] 
| Application, business, general, Web 

| X 
| X 
| X 
| 
| X 
| X 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[ColdFusion Markup Language|ColdFusion]] (CFML) 
| Web 

| 
| X 
| 
| X 
| 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Common Lisp]] 
| General 

| X 
| X 
| X 
| 
| X 
| X 
| 

| 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|1994, ANSI 

|- align="center"
! [[COMAL]] 80 
| Education 

| X 
| 
| 
| X 
| 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! Crystal 1.0.0 
| Education 

| X 
| 
| X 
| X 
| 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Cython]] 
| Application, general, numerical computing 

| X 
| X 
| X 
| 
| 
| X 
| 

| [[aspect-oriented programming|aspect-oriented]] 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[D (programming language)|D]] 
| Application, system 

| X 
| X 
| X 
| 
| X 
| 
| 

| generative, concurrent 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Dart (programming language)|Dart]] 
| Application, Web 

| X 
| X 
| 
| 
| 
| 
| 

| structured 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Dylan (programming language)|Dylan]] 
| Application 

| 
| X 
| X 
| 
| 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Eiffel (programming language)|Eiffel]] 
| Application 

| X 
| X 
| 
| 
| X 
| 
| 

| 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|2005, ECMA, ISO 

|- align="center"
! [[Erlang (programming language)|Erlang]] 
| Application, distributed, telecom 

| 
| 
| X 
| 
| 
| 
| 

| concurrent, [[distributed programming|distributed]] 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Euphoria (programming language)|Euphoria]] 
| Application. Since the interpreter is shared for system and application code, system is not an intended use because application crashes would affect the whole system. 

| 
| 
| 
| X 
| 
| X 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Factor (programming language)|Factor]] 
| 

| 
| 
| 
| 
| 
| 
| 

| [[stack-oriented programming language|stack-oriented]] 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Falcon (programming language)|Falcon]] 
| General, Application 

| 
| X 
| X 
| X 
| 
| 
| 

| prototype OOP, message oriented, tabular programming 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[FP (programming language)|FP]] 
| 

| 
| 
| X 
| 
| 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[F Sharp (programming language)|F#]] 
| Application 

| X 
| X 
| X 
| 
| X 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Forth (programming language)|Forth]] 
| General 

| X 
| 
| 
| 
| 
| 
| 

| stack-oriented 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|1994, ANSI 

|- align="center"
! [[Fortran]] 
| Application, numerical computing 

| X 
| X 
| 
| X 
| X 
| 
| 

| 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|1966, ANSI 66, ANSI 77, MIL-STD-1753, ISO 90, ISO 95, ISO 2003, ISO/IEC 1539-1:2010 (2008) 

|- align="center"
! [[FreeBASIC]] 
| Application, numerical computing 

| X 
| X 
| 
| X 
| X 
| 
| 

| 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|1956 

|- align="center"
! G2 
| Application, inference, expert system 

| X 
| X 
| 
| 
| 
| 
| X 

| common graphical development and runtime environment 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Gambas]] 
| Application 

| X 
| X 
| 
| 
| 
| 
| X 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Game Maker Language]]
| Application, games

| X 
| X 
| 
| 
| 
| 
| X 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No

|- align="center"
! [[GLBasic]] 
| Application, games 

| X 
| X 
| 
| X 
| 
| 
| 

| simple object-oriented 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Go (programming language)|Go]] 
| Application, system 

| X 
| 
| 
| 
| 
| 
| 

| concurrent 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Gosu (programming language)|Gosu]] 
| Application, general, scripting, Web 

| X 
| X 
| 
| 
| X 
| X 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[GraphTalk]] 
| Application 

| 
| X 
| 
| 
| 
| 
| 

| logic 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Groovy (programming language)|Groovy]] 
| Application, general, scripting, Web 

| X 
| X 
| X 
| 
| 
| 
| 

| aspect-oriented 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|In progress, [[Java Community Process|JCP]] 

|- align="center"
! [[Harbour (programming language)|Harbour]] 
| Application, business, data processing, general, Web 

| X 
| X 
| X 
| X 
| X 
| X 
| 

| [[declarative programming|declarative]] 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Haskell (programming language)|Haskell]] 
| Application 

| 
| 
| X 
| 
| X 
| 
| 

| [[lazy evaluation]] 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|2010, Haskell 2010 

|- align="center"
! [[Haxe]] 
| Application, general, Web 

| X 
| X 
| X 
| 
| X 
| X 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[HyperNext]] 
| Application, education 

| 
| 
| 
| X 
| 
| 
| X 

| [[weak typing|weakly typed]] 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[HyperTalk]] 
| Application, RAD, General 

| 
| X 
| 
| 
| 
| 
| X 

| [[weak typing|weakly typed]] 
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown 

|- align="center"
! [[Io (programming language)|Io]] 
| Application, host-driven scripting 

| X 
| X 
| 
| 
| 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[ISLISP]] 
| General 

| X 
| X 
| X 
| 
| X 
| 
| 

| 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|1997, [[International Organization for Standardization|ISO]] 

|- align="center"
! [[J (programming language)|J]] 
| Data processing 

| 
| 
| 
| 
| 
| 
| 

| array-oriented, [[function-level programming|function-level]], tacit 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[JADE (programming language)|JADE]] 
| Application, distributed 

| X 
| X 
| 
| 
| 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Java (programming language)|Java]] 
| Application, business, client-side, general, server-side, Web 

| X 
| X 
| 
| 
| X 
| X 
| 

| concurrent 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|''De facto'' standard via [http://docs.oracle.com/javase/specs/jls/se7/html/index.html Java Language Specification] 

|- align="center"
! [[JavaScript]] 
| Client-side, Server-side, Web 

| X 
| X 
| X 
| 
| 
| X 
| 

| [[prototype-based]] 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|1997, ECMA 

|- align="center"
! [[Joy (programming language)|Joy]] 
| Research 

| 
| 
| X 
| 
| 
| 
| 

| stack-oriented 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[K (programming language)|K]] 
| Data processing, business 

| 
| 
| 
| 
| 
| 
| 

| array-oriented, tacit 
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown 

|- align="center"
! [[Kotlin (programming language)|Kotlin]] 
| Application, mobile development, server-sider, client-side, Web (JavaScript, HTML, CSS)

| X 
| X 
| X 
| 
| X 
| 
| 

| 
| 

|- align="center"
! [[LabVIEW]] (G) 
| Application, industrial instrumentation-automation 

| 
| 
| 
| 
| 
| 
| 

| [[dataflow programming|dataflow]], [[visual programming language|visual]] 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Lisp (programming language)|Lisp]] 
| General 

| 
| 
| X 
| 
| 
| 
| 

| 
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown 

|- align="center"
! [[LiveCode|Livecode]] 
| Application, RAD, General 

| 
| X 
| 
| 
| 
| 
| X 

| [[weak typing|weakly typed]] 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Logtalk]] 
| Artificial intelligence, application 

| 
| X 
| 
| 
| 
| X 
| X 

| logic 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Lua (programming language)|Lua]] 
| Application, embedded scripting 

| X 
| X 
| X 
| X 
| 
| X 
| 

| aspect-oriented 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Maple (software)|Maple]] 
| Symbolic computation, numerical computing 

| X 
| X 
| X 
| X 
| 
| 
| 

| [[distributed programming|distributed]] 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Mathematica]] 
| Symbolic language 

| X 
| X 
| X 
| X 
| 
| 
| 

| logic, distributed 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[MATLAB]] 
| Highly domain-specific, numerical computing 

| X 
| X 
| 
| X 
| 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Modula-2]] 
| Application, system 

| X 
| 
| 
| 
| X 
| 
| 

| 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|1996, ISO 

|- align="center"
! [[Modula-3]] 
| Application 

| X 
| X 
| 
| 
| X 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Oberon (programming language)|Oberon]] 
| Application, system 

| X 
| X 
| 
| 
| 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Objective-C]] 
| Application, general 

| X 
| X 
| 
| 
| 
| X 
| 

| concurrent 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Occam (programming language)|Occam]] 
| General 

| X 
| 
| 
| X 
| 
| 
| 

| concurrent, [[process-oriented programming|process-oriented]] 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Opa (programming language)|Opa]] 
| Web applications 

| X 
| 
| X 
| 
| X 
| 
| 

| [[distributed programming|distributed]] 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Oxygene (programming language)|Oxygene]] 
| Application 

| X 
| X 
| 
| 
| X 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Oz (programming language)|Oz]] 
| Application, distribution, education 

| X 
| X 
| X 
| 
| 
| 
| 

| concurrent, logic 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Pascal (programming language)|Pascal]] 
| Application, education 

| X 
| 
| 
| X 
| 
| 
| 

| 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|1983, ISO 

|- align="center"
! [[Pawn (programming language)|Pawn]] 
| Embedded, host-driven scripting 

| X 
| 
| 
| 
| 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Perl]] 
| Application, scripting, text processing, Web 

| X 
| X 
| X 
| X 
| X 
| X 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[PHP]] 
| Server-side, Web Application, Web 

| X 
| X 
| 
| X 
| 
| X 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[PL/I]] 
| Application 

| X 
| X 
| 
| X 
| 
| 
| 

| 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|1969 

|- align="center"
! [[Plus (programming language)|Plus]] 
| Application, system development 

| X 
| 
| 
| X 
| 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Prolog]] 
| Application, artificial intelligence 

| 
| 
| 
| 
| 
| 
| 

| logic 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|1995, ISO 

|- align="center"
! [[PureBasic]] 
| Application 

| 
| 
| 
| X 
| 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Python (programming language)|Python]] 
| Application, general, Web, scripting, AI, scientific computing 

| X 
| X 
| X 
| 
| 
| X 
| 

| aspect-oriented 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Racket (programming language)|Racket]] 
| Education, general, scripting 

| 
| X 
| X 
| X 
| 
| X 
| 

| modular, logic, meta 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[REALbasic]] 
| Application 

| 
| 
| 
| X 
| 
| 
| 

| 
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown 

|- align="center"
! [[REBOL]] 
| Distributed 

| X 
| X 
| X 
| 
| 
| 
| 

| [[dialecting|dialected]] 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[IBM RPG|RPG (IBM)]] 
| Application, system 

| X 
| 
| 
| X 
| 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Ruby (programming language)|Ruby]] 
| Application, scripting, Web 

| X 
| X 
| X 
| 
| 
| X 
| 

| aspect-oriented 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|2011(JIS X 3017), 2012(ISO/IEC 30170) 

|- align="center"
! [[Rust (programming language)|Rust]] 
| Application, system 

| X 
| X 
| X 
| 
| X 
| X 
| 

| concurrent 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[S (programming language)|S]] 
| Application, statistics 

| X 
| X 
| X 
| X 
| 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[S-Lang (programming library)|S-Lang]] 
| Application, numerical, scripting 

| X 
| 
| 
| X 
| 
| 
| 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Scala (programming language)|Scala]] 
| Application, distributed, Web 

| X 
| X 
| X 
| 
| X 
| 
| 

| 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|''De facto'' standard via [http://www.scala-lang.org/sites/default/files/linuxsoft_archives/docu/files/ScalaReference.pdf Scala Language Specification (SLS)] 

|- align="center"
! [[Scheme (programming language)|Scheme]] 
| Education, general 

| 
| 
| X 
| 
| 
| 
| 

| 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|1998, R<sup>6</sup>RS 

|- align="center"
! [[Seed7]] 
| Application, general, scripting, Web 

| X 
| X 
| 
| 
| X 
| X 
| 

| multi-paradigm, extensible, structured 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Simula]] 
| Education, general 

| X 
| X 
| 
| 
| 
| 
| X 

| [[discrete event simulation]], [[multi-threaded]] (quasi-parallel) program execution 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|1968 

|- align="center"
! [[Microsoft Small Basic|Small Basic]] 
| Application, education, games 

| X 
| 
| 
| 
| 
| 
| X 

| [[component-oriented programming|component-oriented]] 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Smalltalk]] 
| Application, education 

| 
| X 
| 
| 
| 
| X 
| X 

| concurrent, declarative 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|1998, [http://www.techstreet.com/cgi-bin/detail?product_id=56122 ANSI] 

|- align="center"
! [[SNOBOL]] 
| Text processing 

| 
| 
| 
| 
| 
| 
| 

| 
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown 

|- align="center"
! [[Standard ML]] 
| Application 

| X 
| 
| X 
| 
| X 
| 
| 

| 
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|1997, SML '97 

|- align="center"
! [[Tcl]] 
| Application, scripting, Web 

| X 
| 
| 
| X 
| 
| X 
| X 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Visual Basic]] 
| Application, RAD, education, business, general, (Includes VBA), office automation 

| X 
| 
| 
| 
| X 
| 
| X 

| [[component-oriented programming|component-oriented]] 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! <span class="nowrap">[[Visual Basic .NET]]</span> 
| Application, RAD, education, Web, business, general 

| X 
| X 
| 
| 
| X 
| X 
| X 

| 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Visual FoxPro]] 
| Application 

| 
| X 
| 
| 
| 
| 
| 

| data-centric, logic 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Visual Prolog]] 
| Application 

| X 
| X 
| X 
| 
| 
| 
| X 

| declarative, logic 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[Windows PowerShell]] 
| Administration 

| X 
| X 
| X 
| 
| 
| X 
| 

| [[pipeline programming|pipeline]] 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 

|- align="center"
! [[XL (programming language)|XL]] 
| 

| X 
| X 
| 
| 
| 
| 
| 

| [[concept programming]] 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No 


|- align="center"class="sortbottom"
! Language
! Intended use 
! style="font-size:xx-small;" | [[imperative programming|Imperative]]
! style="font-size:xx-small;" | [[object-oriented programming|Object-Oriented]]
! style="font-size:xx-small;" | [[functional programming|Functional]]
! style="font-size:xx-small;" | [[procedural programming|Procedural]]
! style="font-size:xx-small;" | [[generic programming|Generic]]
! style="font-size:xx-small;" | [[reflective programming|Reflective]]
! style="font-size:xx-small;" | [[event-driven programming|Event-Driven]]
! Other [[programming paradigm|Paradigm]](s)
! [[standardization|Standardized]]?
|}

==Type systems==
Brief definitions
* A [[Nominative type system|nominal type system]] means that the language decides whether types are compatible and/or equivalent based on explicit declarations and names.
* A [[structural type system]] means that the language decides whether types are compatible and/or equivalent based on the definition and characteristics of the types.
* ''Type checking'' determines whether and when types are verified. Static checking means that type errors are reported based on a program's text (source code). Dynamic checking means that type errors are reported based on a program's dynamic (run-time) behavior..
{| class="wikitable sortable"
|-
! Language
! [[Type safety]]
! [[Type system#Explicit or implicit declaration and inference|Type expression]]
! [[Type equivalence|Type compatibility and equivalence]] 
! [[Type checking]]
|-
! [[ActionScript]] 3.0
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit with optional explicit typing
|
| static
|-
! [[Ada (programming language)|Ada]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| explicit
| nominal
| static
|-
! [[Aldor]]
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|unsafe
| implicit
|
| static
|-
! [[ALGOL 58]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| explicit
|
| static
|-
! [[ALGOL 60]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| explicit
|
| static
|-
! [[ALGOL 68]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| explicit
| structural
| static & [[tagged union]]s
|-
! [[APL (programming language)|APL]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
|
|
| dynamic
|-
! [[AutoHotkey]]
| typeless
| n/a
| n/a
| n/a
|-
! [[Ateji PX]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| explicit
| nominal
| static
|-
! [[BASIC]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| explicit
| nominal
| static
|-
! [[BLISS]]
| typeless
| n/a
| n/a
| n/a
|-
! [[BeanShell]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
|
| nominal
| dynamic
|-
! [[Boo (programming language)|Boo]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit with optional explicit typing
|
| static with optional dynamic typing
|-
! [[Bro (software)|Bro]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit with optional explicit typing
| nominal
| static
|-
! [[C (programming language)|C]]
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|unsafe
| explicit
| nominal
| static
|-
! [[C++]] ([[ISO/IEC 14882]])
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|unsafe
| explicit
| nominal
| static
|-
! [[C Sharp (programming language)|C#]]
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|unsafe
| implicit with optional explicit typing
| nominal
| static
|-
! [[Clean (programming language)|Clean]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit
|
| static
|-
! [[Clojure]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit with optional explicit typing
|
| dynamic
|-
! [[COBOL]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| explicit
|
| static
|-
! [[ColdFusion Markup Language|ColdFusion]] (CFML)
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit
|
| dynamic
|-
! [[Common Lisp]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit with optional explicit typing
|
| dynamic
|-
! [[Curl (programming language)|Curl]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
|
| nominal
|
|-
! [[Cython]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit with optional explicit typing
| nominal (extension types) and structural (Python)
| dynamic with optional static typing
|-
! [[D (programming language)|D]]
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|unsafe
| explicit
| nominal
| static
|-
! [[Dylan (programming language)|Dylan]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
|
|
| dynamic
|-
! [[Dynace]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit 
|
| dynamic
|-
! [[Eiffel (programming language)|Eiffel]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
|
| nominal
| static
|-
! [[Erlang (programming language)|Erlang]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit
|
| dynamic
|-
! [[Euphoria (programming language)|Euphoria]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| explicit, implicit with objects
| nominal
| static, dynamic with objects
|-
! [[F Sharp (programming language)|F#]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit
| nominal
| static
|-
! [[Falcon (programming language)|Falcon]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit
| structural
| dynamic
|-
! [[Forth (programming language)|Forth]]
| typeless
| n/a
| n/a
| n/a
|-
! [[Fortran]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| explicit
| nominal
| static
|-
! [[Gambas]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| explicit
| nominal
|
|-
! [[GLBasic]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| explicit. Non-explicit declarations available through project options
| nominal
| static
|-
! [[Go (programming language)|Go]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit with optional explicit typing
| structural
| static
|-
! [[Gosu (programming language)|Gosu]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| partially implicit (local type inference)
| nominal (subclassing) and structural (structural)
| static
|-
! [[Groovy (programming language)|Groovy]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit with optional explicit typing
|
| dynamic with optional static typing
|-
! [[Harbour (programming language)|Harbour]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit with optional explicit typing
|
| dynamic
|-
! [[Haskell (programming language)|Haskell]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit with optional explicit typing
| structural
| static
|-
! [[Haxe]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit with optional explicit typing
| nominal (subclassing) and structural (structural)
| static with optional dynamic typing
|-
! [[Io (programming language)|Io]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit
|
| dynamic
|-
! [[ISLISP]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
|
|
| dynamic
|-
! [[J (programming language)|J]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
|
|
| dynamic
|-
! [[Java (programming language)|Java]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| explicit
| nominal
| static
|-
! [[JavaScript]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit
| structural
| dynamic
|-
! [[Joy (programming language)|Joy]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
|
|
| dynamic
|-
! [[Kotlin (programming language)|Kotlin]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| partially implicit (local type inference)
| nominal
| static
|-
! [[LabVIEW]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
|
|
|
|-
! [[Lua (programming language)|Lua]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit
|
| dynamic
|-
! [[Maple (programming language)|Maple]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
|
|
| dynamic
|-
! [[Mathematica]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
|
|
| dynamic
|-
! [[MATLAB]] M-code
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
|
|
| dynamic
|-
! [[Modula-2]]
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|unsafe
| explicit
| nominal
| static
|-
! [[Modula-3]]
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|unsafe
| explicit
| structural
| static
|-
! [[Oberon (programming language)|Oberon]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| explicit
| nominal
| static and partially dynamic
|-
! [[Objective-C]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| explicit
| nominal
| dynamic with optional static typing
|-
! [[OCaml]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit with optional explicit typing
| structural
| static
|-
! [[Object Pascal]] ([[Embarcadero Delphi|Delphi]])
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| explicit
| nominal
| static
|-
! [[Opa (programming language)|Opa]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit with optional explicit typing
| structural
| static
|-
! [[Oxygene (programming language)|Oxygene]]
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|unsafe
| implicit
|
| static
|-
! [[Oz (programming language)|Oz]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit
| structural
| dynamic
|-
! [[Pascal (programming language)|Pascal]]
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|unsafe
| explicit
| nominal
| static
|-
! [[Perl]] 5
|
| implicit
|
| dynamic
|-
! [[Perl 6]]
|
| partially implicit
|
| dynamic with optional static typing
|-
! [[PHP]]
|
| implicit
|
| dynamic
|-
! [[Plus (programming language)|Plus]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| explicit
| structural
| static, dynamic (optional)
|-
! [[Prolog]]
|
|
|
| dynamic
|-
! [[Pure (programming language)|Pure]]
|
|
|
| dynamic
|-
! [[Python (programming language)|Python]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit
| structural
| dynamic
|-
! [[REBOL]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit
|
| dynamic
|-
! [[RPG (IBM)]]
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|unsafe
|
|
| static
|-
! [[Ruby (programming language)|Ruby]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit
| structural
| dynamic
|-
! [[Rust (programming language)|Rust]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit with optional explicit typing
|
| static with optional dynamic typing
|-
! [[S (programming language)|S]]
|
|
|
| dynamic
|-
! [[S-Lang (programming library)|S-Lang]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit
|
| dynamic
|-
! [[Scala (programming language)|Scala]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| partially implicit (local type inference)
| nominal (subclassing) and structural (structural)
| static
|-
! [[Scheme (programming language)|Scheme]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit
|
| dynamic (latent)
|-
! [[Seed7]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| explicit
| nominal
| static
|-
! [[Simula]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
|
|
| static
|-
! [[Smalltalk]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit
|
| dynamic
|-
! [[Standard ML]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit with optional explicit typing
| structural
| static
|-
! [[Tcl]]
|
|
|
| dynamic
|-
! [[Visual Basic]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit with optional explicit typing
| nominal
| static
|-
! <span class="nowrap">[[Visual Basic .NET]]</span>
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|unsafe
| explicit
|
| static
|-
! [[Visual Prolog]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| partially implicit
| nominal
| static
|-
! [[Windows PowerShell]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
| implicit
|
| dynamic
|-
! [[XL (programming language)|XL]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|safe
|
| nominal
| static
|- class="sortbottom"
! Language
! [[Type system#Safely and unsafely typed systems|Type safety]]
! [[Type system#Explicit or implicit declaration and inference|Type expression]]
! [[Type equivalence|Type compatibility among composites]]
! [[Type checking]]
|}

<div class="reflist " style=" list-style-type: decimal;">
<references group="TS"></references></div>

==Failsafe I/O and system calls==
Most programming languages will print an [[error message]] and/or throw an [[exception handling|exception]] if an [[input/output]] operation or other [[system call]] (e.g., [[chmod]], [[kill (Unix)|kill]]) fails, unless the programmer has explicitly arranged for different handling of these events. Thus, these languages [[failsafe|fail safely]] in this regard.

Some (mostly older) languages require that the programmer explicitly add checks for these kinds of errors. Psychologically, different [[List of cognitive biases|cognitive biases]] (e.g., [[optimism bias]]) may affect novice and experts alike and these omissions can lead to [[software bug|erroneous behavior]].

{|class="wikitable sortable"
|-
! Language
! Failsafe I/O
|-
! [[Ada (programming language)|Ada]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes (exceptions)
|-
! [[ALGOL]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes (exceptions or return value depending on function)
|-
! [[AutoHotkey]]
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No (global ErrorLevel must be explicitly checked)
|-
! [[Bro (software)|Bro]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
! [[C (programming language)|C]]
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No
|-
! [[C++]]
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No
|-
! [[C Sharp (programming language)|C#]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
! [[COBOL]]
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No
|-
! [[Common Lisp]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
! [[D (programming language)|D]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes<sup class="Template-Fact" style="white-space:nowrap;">&#91;<i>[[Wikipedia:Citation needed|<span title="This claim needs references to reliable sources. (February 2011)">citation needed</span>]]</i>&#93;</sup>
|-
! [[Eiffel (programming language)|Eiffel]]
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No – It actually depends on the library and it is not defined by the language
|-
! [[Erlang (programming language)|Erlang]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
! [[Falcon (programming language)|Falcon]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
! [[Fortran]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
! [[GLBasic]]
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No – Will generally cause program to crash
|-
! [[Go (programming language)|Go]]
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No
|-
! [[Gosu (programming language)|Gosu]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
! [[Harbour (programming language)|Harbour]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
! [[Haskell (programming language)|Haskell]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
! [[ISLISP]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
! [[Java (programming language)|Java]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
! [[Kotlin (programming language)|Kotlin]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
! [[LabVIEW]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
! [[Lua (programming language)|Lua]]
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No (some functions do not warn or throw exceptions)
|-
! [[Mathematica]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
! [[Object Pascal]] ([[Embarcadero Delphi|Delphi]])
| style="background: #FFD; color: black; vertical-align: middle; text-align: center; " class="partial table-partial"|Some
|-
! [[Objective-C]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes (exceptions)
|-
! [[OCaml]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes (exceptions)
|-
! [[Perl]]
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No
|-
! [[PHP]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
! [[Python (programming language)|Python]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
! [[REBOL]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
! [[Ruby (programming language)|Ruby]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
! [[Rust (programming language)|Rust]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
! [[S (programming language)|S]]
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
|-
! [[Scala (programming language)|Scala]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
! [[Standard ML]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes<sup class="Template-Fact" style="white-space:nowrap;">&#91;<i>[[Wikipedia:Citation needed|<span title="This claim needs references to reliable sources. (February 2011)">citation needed</span>]]</i>&#93;</sup>
|-
! [[Tcl]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
! [[Visual Basic]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
! [[Visual Prolog]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|- class="sortbottom"
! Language
! Failsafe I/O
|}

<div class="reflist " style=" list-style-type: decimal;">
<references group="FSIO"></references></div>

==Expressiveness==
{| id="Expressiveness" class="wikitable" style="float:right;"
|-
! Language !! Statements ratio
! Lines ratio
|-
| C || 1 || 1
|-
| C++ || 2.5 || 1
|-
| Fortran || 2 || 0.8
|-
| Java || 2.5 || 1.5
|-
| Perl || 6 || 6
|-
| Smalltalk || 6 || 6.25
|-
| Python || 6 || 6.5
|}

The literature on programming languages contains an abundance of informal claims about their relative [[expressive power]], but there is no framework for formalizing such statements nor for deriving interesting consequences. This table provides two measures of expressiveness from two different sources. An additional measure of expressiveness, in [[GZip]] bytes, can be found on the Computer Language Benchmarks Game.

The same concepts applied to measuring the expressiveness of computer programming languages can be applied to markup languages like [[HTML]].

<br style="clear:both;" />

==Benchmarks==
[[benchmark (computing)|Benchmarks]] are designed to mimic a particular type of workload on a component or system. The computer programs used for compiling some of the benchmark data in this section may not have been fully optimized, and the relevance of the data is disputed. The most accurate benchmarks are those that are customized to your particular situation. Other people's benchmark data may have some value to others, but proper interpretation brings many [[benchmark (computing)#Challenges|challenges]]. [http://benchmarksgame.alioth.debian.org/ The Computer Language Benchmarks Game] site warns against [http://benchmarksgame.alioth.debian.org/dont-jump-to-conclusions.php over-generalizing from benchmark data], but contains a large number of micro-benchmarks of reader-contributed code snippets, with an interface that generates various charts and tables comparing specific programming languages and types of tests.

==Timeline of specific language comparisons==
* 1973 – [http://comjnl.oxfordjournals.org/cgi/content/abstract/17/4/325 Comparative Notes on Algol 68 and PL/I] – S. H. Valentine – February 1973
* 1976 – Evaluation of [[ALGOL 68]], [[JOVIAL]] J3B, [[Pascal (programming language)|Pascal]], [[Simula]] 67, and [[TACPOL]] Versus TINMAN – Requirements for a Common High Order Programming Language. 
* 1977 – [http://comjnl.oxfordjournals.org/cgi/content/abstract/21/4/316 A comparison of PASCAL and ALGOL 68] – [[Andrew S. Tanenbaum]] – June 1977.
* 1993 – [http://cm.bell-labs.com/cm/cs/who/dmr/hopl.html Five Little Languages and How They Grew] – [[BLISS]], [[Pascal (programming language)|Pascal]], [[ALGOL 68]], [[BCPL]] & [[C (programming language)|C]] – [[Dennis M. Ritchie]] – April 1993.
* 2009 – [http://www.cowlark.com/2009-11-15-go On Go – oh, go on] – How well will Google's [[Go (programming language)|Go]] stand up against Brand X programming language? – David Given – November 2009

==See also==
* [[Alphabetical list of programming languages]]
* [[Comparison of basic instructions of programming languages]]
* [[Comparison of programming languages (string functions)]]
* [[Comparison of programming languages (strings)]]
* [[Comparison of programming languages (syntax)]]
* [[Comparison of programming languages (array)]]
* [[Comparison of programming languages (object-oriented programming)]]
* [[Comparison of programming languages (list comprehension)]]
* [[Comparison of programming languages (mapping)]]
* [[Comparison of programming paradigms]]
* [[Comparison of type systems]]
* [[Educational programming language]]
* [[Hello world program examples]]
* [[Measuring programming language popularity]]
* [[Programming language]]
* [[List of multi-paradigm programming languages]]

==References==
<div class="reflist columns references-column-count references-column-count-2" style="-moz-column-count: 2; -webkit-column-count: 2; column-count: 2; list-style-type: decimal;">
<references group=""></references></div>[[Category:Articles using fixed number of columns in reflist]]

==Further reading==
* <span class="citation book">Cezzar, Ruknet. ''A Guide to Programming Languages: Overview and Comparison''. [[International Standard Book Number|ISBN]]&nbsp;[[Special:BookSources/978-0-89006-812-0|978-0-89006-812-0]].</span><span title="ctx_ver=Z39.88-2004&rfr_id=info%3Asid%2Fen.wikipedia.org%3ASpecial%3AExpandTemplates&rft.au=Cezzar%2C+Ruknet&rft.aufirst=Ruknet&rft.aulast=Cezzar&rft.btitle=A+Guide+to+Programming+Languages%3A+Overview+and+Comparison&rft.genre=book&rft.isbn=978-0-89006-812-0&rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&nbsp;</span></span>

==External links==
* [http://99-bottles-of-beer.net/ 99-bottles-of-beer.net] — one program in over a thousand variations and multiple languages.
* [http://gmarceau.qc.ca/blog/2009/05/speed-size-and-dependability-of.html The speed, size and dependability of programming languages] — charts and narrative based on The Computer Language Benchmarks Game data.
* [http://benchmarksgame.alioth.debian.org/u32/code-used-time-used-shapes.php Shapes: Source Code Size and Run Time] - charts based on current Benchmarks Game data.
* [http://www.scriptol.com/programming/choose.php Comparison of syntaxes] with sample codes.
* [http://rigaux.org/language-study/syntax-across-languages.html Syntax Across Languages]
* [http://merd.sourceforge.net/pixel/language-study/scripting-language/ Scriptometer scores] — multiple comparisons of 26 programming languages.
* [http://pleac.sourceforge.net/ PLEAC] — Programming Language Examples Alike Cookbook.
* [http://www.ohloh.net/languages OHLOH Language Statistics] — gives an indication of the popularity of programming languages in open-source projects.
* [http://hhh.gavilan.edu/dvantassel/history/history.html History of Programming Language Statements] — history and comparison of programming languages.



[[Category:Programming language comparisons]]
