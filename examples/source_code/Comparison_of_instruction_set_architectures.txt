== Factors ==
=== Bits ===
[[Computer architecture]]s are often described as ''n''-[[bit]] architectures. Today ''n'' is often 8, 16, 32, or 64, but other sizes have been used. This is actually a strong simplification. A computer architecture often has a few more or less "natural" datasizes in the [[instruction set]], but the hardware implementation of these may be very different. Many architectures have instructions operating on half and/or twice the size of respective processors major internal datapaths. Examples of this are the 8080, Z80, MC68000 as well as many others. On this type of implementations, a twice as wide operation typically also takes around twice as many clock cycles (which is not the case on high performance implementations). On the 68000, for instance, this means 8 instead of 4 clock ticks, and this particular chip may be described as a [[32-bit]] architecture with a [[16-bit]] implementation. The external databus width is often not useful to determine the width of the architecture; the NS32008, NS32016 and NS32032 were basically the same 32-bit chip with different external data buses. The NS32764 had a [[64-bit computing|64-bit]] bus, but used 32-bit registers.

The width of addresses may or may not be different from the width of data.
Early 32-bit microprocessors often had a 24-bit address, as did the [[System/360]] processors.

=== Operands ===
<div class="rellink relarticle mainarticle">Main article: [[ instruction set#Number of operands| instruction set#Number of operands]]</div>

The number of operands is one of the factors that may give an indication about the performance of the instruction set.
A three-operand architecture will allow
 A := B + C
to be computed in one instruction.

A two-operand architecture will allow
 A := A + B
to be computed in one instruction, so two instructions will need to be executed to simulate a single three-operand instruction
 A := B
 A := A + C

=== Endianness ===
An architecture may use "big" or "little" endianness, or both, or be configurable to use either. Little endian processors order [[byte]]s in memory with the least significant byte of a multi-byte value in the lowest-numbered memory location. Big endian architectures instead order them with the most significant byte at the lowest-numbered address. The x86 and the ARM architectures as well as several [[8-bit]] architectures are little endian. Most [[RISC]] architectures (SPARC, Power, PowerPC, MIPS) were originally big endian, but many (including ARM) are now configurable.

== Instruction sets ==
Usually numer of "registers" are a power of two, eg. 8, 16, 32. Often however, one of those is hardwired to zero, and then not a really a register and is not counted below. In addition, sometimes there are registers, that are counted below, that are not general purpose. Then again, some special purpose registers (and non-architected registers for [[register renaming#Architectural vs physical registers|register renaming]]) are not counted.

The table below compares basic information about instruction sets to be implemented in the CPU architectures:

{| class="wikitable sortable" border="1"
! Instruction set
! Bits
! Version
! Introduced
! Max # [[operand]]s
! Type
! Design 
! [[Processor register|Registers]]
! Instruction encoding
! [[Branch (computer science)|Branch]] evaluation
! [[Endianness]]
! Extensions
! Open
! Royalty free
|-
| [[DEC Alpha|Alpha]]
| 64
|
| 1992
| 3
| Register Register
| [[Reduced instruction set computer|RISC]]
| 32 
| Fixed <small>(32-bit)</small>
| Condition register
| Bi
| <span title="Motion Video Instructions" style="border-bottom:1px dotted">MVI</span>, <span title="Byte-Word Extensions" style="border-bottom:1px dotted">BWX</span>, <span title="Floating-point Extensions" style="border-bottom:1px dotted">FIX</span>, <span title="Count Extensions" style="border-bottom:1px dotted">CIX</span>
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
|-
| [[ARM architecture|ARM]]
| 32
| ARMv7 and earlier
| 1983
| 3
| Register Register
| RISC
| 16 (including [[Program counter|PC]] and [[Stack pointer|SP]])
| Fixed <small>(32-bit)</small>, Thumb: Fixed <small>(16-bit)</small>, Thumb-2: Variable <small>(16 and 32-bit)</small>
| Condition code
| Bi
| NEON, [[Jazelle]], <span title="Vector Floating Point" style="border-bottom:1px dotted">VFP</span>, [[ARM architecture#Security Extensions (TrustZone)|TrustZone]], <abbr   title="">LPAE</abbr>
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No
|-
| [[ARMv8-A]]
| 64/32
| ARMv8-A
| 2011
| 3
| Register Register
| RISC
| 31
| Fixed <small>(32-bit)</small>. In ARMv7 compatibility mode: Thumb: Fixed <small>(16-bit)</small>, Thumb-2: Variable <small>(16 and 32-bit)</small>, A64
| Condition code
| Bi
| NEON, [[Jazelle]], <span title="Vector Floating Point" style="border-bottom:1px dotted">VFP</span>, [[ARM architecture#Security Extensions (TrustZone)|TrustZone]]
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No
|-
| [[AVR32]]
| 32
| Rev 2
| 2006 
| 2-3
|
| RISC
| 15 
| Variable
|
| Big 
| [[Java Virtual Machine]]
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
|-
| [[Blackfin]]
| 32
|
| 2000
|
|
| RISC
| 8 
|
|
| Little
|
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
|-
| [[DLX]]
| 32
|
| 1990
| 3
|
| RISC
| 32
| Fixed <small>(32-bit)</small>
|
| Big
|
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
|-
| [[eSi-RISC]]
| 16/32
|
| 2009
| 3
| Register Register
| RISC
| 8-72
| Variable<small> (16 or 32-bit)</small>
| Compare and branch and condition register
| Bi
| User-defined instructions
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No
|-
| [[Itanium]] (IA-64)
| 64
|
| 2001
|
| Register Register
| [[Explicitly parallel instruction computing|EPIC]]
| 128 
|
| Condition register
| Bi (selectable)
| Intel Virtualization Technology
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No
|-
| [[M32R]]
| 32
|
| 1997
|
|
| RISC
| 16 
| Fixed <small>(16- or 32-bit)</small>
|
| Bi
|
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
|-
| [[Motorola 68k]]
| 32
|
| 1979
| 2
| Register Memory
| [[Complex instruction set computer|CISC]]
| 8 data and 8 address
| Variable
| Condition register
| Big
|
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
|-
| [[LatticeMico32|Mico32]]
| 32
|
| 2006
| 3
| Register Register
| RISC
| 32
| Fixed <small>(32-bit)</small>
| Compare and branch
| Big
| User-defined instructions
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
| [[MIPS architecture|MIPS]]
| 64 <small>(32→64)</small>
| 5 
| 1981
| 1-3
| Register Register
| RISC
| 4-31 
| Fixed <small>(32-bit)<small>
| Condition register
| Bi
| [[MDMX]], [[MIPS-3D]]
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No
|-
| [[MMIX]]
| 64
|
| 1999
| 3
| Register Register
| RISC
| 256 
| Fixed <small>(32-bit)</small>
|
| Big
|
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
| [[MOS Technology 6502|6502]]
| 8
|
| 1975
| 1
| Register Memory
| CISC
| 1
| Variable <small>(8 to 32&nbsp;bits)</small>
| Condition register
| Little
|
|
|
|-
| [[65k]]
| 64&nbsp;<small>(8→64)</small>
|
| 2006?
| 1
| Memory Memory<sup class="Template-Fact" style="white-space:nowrap;">&#91;<i>[[Wikipedia:Citation needed|<span title="This claim needs references to reliable sources. (December 2013)">citation needed</span>]]</i>&#93;</sup>
| CISC
| 1
| Variable <small>(8&nbsp;bits to 256&nbsp;bytes)</small>
| Compare and branch<sup class="Template-Fact" style="white-space:nowrap;">&#91;<i>[[Wikipedia:Citation needed|<span title="This claim needs references to reliable sources. (December 2013)">citation needed</span>]]</i>&#93;</sup>
| Little
|
|
|
|-
| [[NS320xx]]
| 32
|
| 1982
| 5
| Memory Memory
| CISC
| 8 
| Variable Huffman coded, up to 23&nbsp;bytes long
| Condition Code
| Little
| BitBlt instructions
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
|-
| [[PA-RISC]] (HP/PA)
| 64 <small>(32→64)</small>
| 2.0 
| 1986
| 3
| Register Register
| RISC
| 32
| Fixed <small>(32-bit)</small>
| Compare and branch
| Big → Bi 
| [[Multimedia Acceleration eXtensions]] (MAX), MAX-2
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
|-
| [[PowerPC]]
| 32/64&nbsp;<small>(32→64)</small>
| 2.07 
| 1991
| 3
| Register Register
| RISC
| 32
| Fixed <small>(32-bit)</small>, Variable
| Condition code
| Big/Bi
| [[AltiVec]], APU, [[AltiVec#VSX|VSX]], [[Cell (microprocessor)|Cell]]
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No
|-
| [[S+core]]
| 16/32
|
| 2005
|
|
| RISC
|
|
|
| Little
|
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
|-
| [[SPARC]]
| 64 <small>(32→64)</small>
| V9
| 1985
| 3
| Register Register
| RISC
| 31 (of at least 55) 
| Fixed <small>(32-bit)</small>
| Condition code
| Big → Bi 
| [[Visual Instruction Set|VIS]] 1.0, 2.0, 3.0
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
| style="background:#9F9;vertical-align:middle;text-align:center;" class="table-yes"|Yes
|-
| [[SuperH]] (SH)
| 32
|
| 1990s
| 2
| Register Register / Register Memory
| RISC
| 16
| Fixed <small>(16- or 32-bit)</small>, Variable
| Condition Code (Single Bit)
| Bi
|
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
|-
| System/360 / [[System/370]] / [[z/Architecture]]
| 64 <small>(32→64)</small>
| 3 
| 1964
|
| Register Memory / Memory Memory
| CISC
| 16 
| Variable 
| Condition code
| Big
|
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
|-
| [[VAX]]
| 32
|
| 1977
| 6
| Memory Memory
| CISC
| 16
| Variable 
| Compare and branch
| Little
| VAX Vector Architecture
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
| style="background: #E4E4E4; color: black; vertical-align: middle; text-align: center; " class="unknown table-unknown"|Unknown
|-
| [[x86]]
| 32 <small>(16→32)</small>
|
| 1978
| 2
| Register Memory
| CISC
| 8 (including SP and BP)
| Variable 
| Condition code
| Little
| [[MMX (instruction set)|MMX]], [[3DNow!]], [[Streaming SIMD Extensions|SSE]], [[Physical Address Extension|PAE]]
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No
|-
| [[x86-64]]
| 64 <small>(32→64)</small>
|
| 2003
| 2 (integer)<br>3 (AVX)
| Register Memory
| CISC
| 16 (including SP and BP)
| Variable 
| Condition code
| Little
| [[MMX (instruction set)|MMX]], [[3DNow!]], [[Physical Address Extension|PAE]], [[Advanced Vector Extensions|AVX]], [[AES instruction set|AES]], [[FMA instruction set|FMA]] 
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No
| style="background:#F99;vertical-align:middle;text-align:center;" class="table-no"|No
|-
| [[Z80]]
| 8
|
| 1976
| 2
| Register Memory
| CISC
| 8
| Variable <small>(8 to 32&nbsp;bits)</small>
| Condition register
| Little
|
|
|
|-
| [[Xilinx]]
| 4→48→56
|
| 2005
| 1
| Condition Code
| FPGA
| 1
| Variable <small>(up to 768&nbsp;bytes)</small>
| Condition register
| Little
|
|
|
|-
| [[Transmeta Crusoe|Crusoe]]
| 32
|
| 2000
| 1
| Register Register
| VLIW
| 64
| Variable <small>(64 or 128&nbsp;bits)</small>
| Condition code
| Little
|
|
|
|-
! Architecture
! Bits
! Version
! Introduced
! Max # operands
! Type
! Design 
! Registers
! Instruction encoding
! Branch evaluation
! Endianness
! Extensions
! Open
! Royalty free
|}

== See also ==
<div class="noprint tright portal" style="border:solid #aaa 1px;margin:0.5em 0 0.5em 1em;">
<table style="background:#f9f9f9;font-size:85%;line-height:110%;max-width:175px;">
<tr valign="middle"><td style="text-align:center;">[[File:Internet map 1024.jpg|32x28px|alt=Portal icon]]</td><td style="padding:0 0.2em;vertical-align:middle;font-style:italic;font-weight:bold;">[[Portal:Computer science|Computer science portal]]</td></tr></table></div>
* [[Central processing unit]] (CPU)
* [[CPU design]]
* [[Comparison of CPU microarchitectures]]
* [[Instruction set]]
* [[List of instruction sets]]
* [[Microprocessor]]
* [[Benchmark (computing)]]

== References ==
<div class="reflist columns references-column-width" style="-moz-column-width: 30em; -webkit-column-width: 30em; column-width: 30em; list-style-type: decimal;">
<references group=""></references></div>

<table cellspacing="0" class="navbox" style="border-spacing:0;"><tr><td style="padding:2px;"><table cellspacing="0" class="nowraplinks collapsible autocollapse navbox-inner" style="border-spacing:0;background:transparent;color:inherit;"><tr><th scope="col" class="navbox-title" colspan="2"><div class="plainlinks hlist navbar mini"><ul><li class="nv-view">[[Template:CPU technologies|<span  title="View this template" style=";;background:none transparent;border:none;;">v</span >]]</li><li class="nv-talk">[[Template talk:CPU technologies|<span  title="Discuss this template" style=";;background:none transparent;border:none;;">t</span >]]</li><li class="nv-edit">[//en.wikipedia.org/w/index.php?title=Template:CPU_technologies&action=edit <span  title="Edit this template" style=";;background:none transparent;border:none;;">e</span >]</li></ul></div><div style="font-size:110%;">[[Central processing unit|CPU technologies]]</div></th></tr><tr style="height:2px;"><td colspan="2"></td></tr><tr><th scope="row" class="navbox-group">[[Computer architecture|Architecture]]</th><td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;"><div style="padding:0em 0.25em;">
* [[Harvard architecture|Harvard]] ([[Modified Harvard architecture|Modified Harvard]])
* [[von Neumann architecture|von Neumann]]
* [[Dataflow architecture|Dataflow]]
* [[Comparison of instruction set architectures|Comparison]]
</div></td></tr><tr style="height:2px;"><td colspan="2"></td></tr><tr><th scope="row" class="navbox-group">[[Instruction set]]</th><td class="navbox-list navbox-even hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;"><div style="padding:0em 0.25em;">
* [[Application-specific instruction-set processor|ASIP]]
* [[Complex instruction set computing|CISC]] 
* [[Explicit Data Graph Execution|EDGE]] 
* [[Explicitly parallel instruction computing|EPIC]]
* [[Minimal instruction set computer|MISC]] 
* [[One instruction set computer|OISC]]
* [[Reduced instruction set computing|RISC]]
* [[Very long instruction word|VLIW]]
* [[No instruction set computing|NISC]] 
* [[Zero instruction set computer|ZISC]]
</div></td></tr><tr style="height:2px;"><td colspan="2"></td></tr><tr><th scope="row" class="navbox-group">[[Word (computer architecture)|Word size]]</th><td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;"><div style="padding:0em 0.25em;">
* [[1-bit architecture|1-bit]]
* [[4-bit]]
* [[8-bit]]
* [[Word (computer architecture)#Table_of_word_sizes|9-bit]]
* [[Ferranti Mercury|10-bit]]
* [[12-bit]]
* [[Apollo Guidance Computer|15-bit]]
* [[16-bit]]
* [[18-bit]]
* [[Z3 (computer)|22-bit]]
* [[24-bit]]
* [[UNIVAC III|25-bit]]
* [[Saturn Launch Vehicle Digital Computer|26-bit]]
* [[D-17B|27-bit]]
* [[31-bit]]
* [[32-bit]]
* [[ZEBRA (computer)|33-bit]]
* [[Fast Universal Digital Computer M-2|34-bit]] 
* [[36-bit]]
* [[Word (computer architecture)#Table of word sizes|39-bit]]
* [[IAS machine|40-bit]] 
* [[48-bit]]
* [[Atanasoff–Berry Computer|50-bit]] 
* [[60-bit]]
* [[64-bit computing|64-bit]]
* [[128-bit]]
* [[256-bit]]
* [[512-bit]]
* [[Word (computer architecture)|variable]]
</div></td></tr><tr style="height:2px;"><td colspan="2"></td></tr><tr><th scope="row" class="navbox-group">[[Pipeline (computing)|Pipeline]]</th><td class="navbox-list navbox-even hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;"><div style="padding:0em 0.25em;">
* [[Instruction pipeline|Instruction pipelining]]
* [[Out-of-order execution|In-order & out-of-order execution]]
* [[Branch predictor]]
* [[Register renaming]]
* [[Speculative execution]]
* [[hazard (computer architecture)|Hazards]]
* [[Bubble (computing)|Bubble]]
</div></td></tr><tr style="height:2px;"><td colspan="2"></td></tr><tr><th scope="row" class="navbox-group">[[Parallel computing|Parallel level]]</th><td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;"><div style="padding:0em 0.25em;">
* [[Bit-level parallelism|Bit]]
** [[Bit-serial architecture|Bit-serial]]
** [[Word (computer architecture)|Word]]
* [[Instruction-level parallelism|Instruction]]
** [[Scalar processor|Scalar]]
** [[Superscalar]]
* [[Data parallelism|Data]]
** [[Vector processor|Vector]]
* [[Task parallelism|Task]]
** [[Thread (computing)|Thread]]
</div></td></tr><tr style="height:2px;"><td colspan="2"></td></tr><tr><th scope="row" class="navbox-group">[[Multithreading (computer architecture)|Multithreading]]</th><td class="navbox-list navbox-even hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;"><div style="padding:0em 0.25em;">
* [[Temporal multithreading]]
* [[Simultaneous multithreading]]
** [[Hyper-threading]]
</div></td></tr><tr style="height:2px;"><td colspan="2"></td></tr><tr><th scope="row" class="navbox-group">[[Flynn's taxonomy]]</th><td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;"><div style="padding:0em 0.25em;">
* [[SISD]]
* [[SIMD]]
* [[MISD]]
* [[MIMD]]
** [[SPMD]]
</div></td></tr><tr style="height:2px;"><td colspan="2"></td></tr><tr><th scope="row" class="navbox-group">Types</th><td class="navbox-list navbox-even hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;"><div style="padding:0em 0.25em;">
* [[Digital signal processor]]
* [[General-purpose computing on graphics processing units|GPGPU]]
* [[Microcontroller]] 
* [[Physics processing unit]]
* [[System on a chip]]
* [[Cellular architecture|Cellular]]
</div></td></tr><tr style="height:2px;"><td colspan="2"></td></tr><tr><th scope="row" class="navbox-group">Components</th><td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;"><div style="padding:0em 0.25em;">
* [[Arithmetic logic unit|ALU]]
* [[Barrel shifter]]
* [[Floating-point unit]]
* [[Back-side bus]]
* ([[Multiplexer]], [[Demultiplexer]])
* [[Processor register|Registers]]
* [[Memory management unit]]
* [[Translation lookaside buffer|TLB]]
* [[CPU cache|Cache]]
* [[Register file]]
* [[Microcode]]
* [[Control unit]]
* [[Clock rate]]
</div></td></tr><tr style="height:2px;"><td colspan="2"></td></tr><tr><th scope="row" class="navbox-group">[[Power management|Power<br/> management]]</th><td class="navbox-list navbox-even hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;"><div style="padding:0em 0.25em;">
* [[Advanced Power Management|APM]]
* [[Advanced Configuration and Power Interface|ACPI]]
* [[Dynamic frequency scaling]]
* [[Dynamic voltage scaling]]
* [[Clock gating]]
</div></td></tr></table></td></tr></table>

[[Category:Instruction set architectures]]
[[Category:Computer architecture]]
[[Category:Computing comparisons]]
