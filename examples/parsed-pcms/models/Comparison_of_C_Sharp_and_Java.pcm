<?xml version="1.0" encoding="ASCII"?>
<pcmmm:PCM xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pcmmm="pcmmm" name="Comparison_of_C_Sharp_and_Java">
  <matrices name="Data types">
    <cells xsi:type="pcmmm:Header" name="0,0: data types" verbatim="Data types" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: java" verbatim="Java" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: c#" verbatim="C#" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: single-root (unified) type system" verbatim="Single-root (unified) type system" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: no" verbatim="No" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: yes" verbatim="Yes" row="1" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: signed integers" verbatim="Signed integers" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: yes; 8, 16, 32, 64 bits" verbatim="Yes; 8, 16, 32, 64 bits" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,2: yes; 8, 16, 32, 64 bits" verbatim="Yes; 8, 16, 32, 64 bits" row="2" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: unsigned integers" verbatim="Unsigned integers" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: no" verbatim="No" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,2: yes; 8, 16, 32, 64 bits" verbatim="Yes; 8, 16, 32, 64 bits" row="3" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: character" verbatim="Character" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: yes" verbatim="Yes" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,2: yes" verbatim="Yes" row="4" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: date/time" verbatim="Date/time" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: yes; reference type" verbatim="Yes; reference type" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,2: yes; value type" verbatim="Yes; value type" row="5" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: ieee 754 binary32 floating point number" verbatim="IEEE 754 binary32 floating point number" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: yes" verbatim="Yes" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,2: yes" verbatim="Yes" row="6" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: ieee 754 binary64 floating point number" verbatim="IEEE 754 binary64 floating point number" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: yes" verbatim="Yes" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,2: yes" verbatim="Yes" row="7" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: boolean type" verbatim="Boolean type" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: yes" verbatim="Yes" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,2: yes" verbatim="Yes" row="8" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: high precision decimal number" verbatim="High precision decimal number" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: no" verbatim="No" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,2: 128-bit (28 digits) decimal type" verbatim="128-bit (28 digits) Decimal type" row="9" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: arbitrary size decimals" verbatim="Arbitrary size decimals" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: reference type; no operators" verbatim="Reference type; no operators" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,2: no" verbatim="No" row="10" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: strings" verbatim="Strings" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: immutable reference type, unicode" verbatim="Immutable reference type, Unicode" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,2: immutable reference type, unicode" verbatim="Immutable reference type, Unicode" row="11" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: arbitrary size integers" verbatim="Arbitrary size integers" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: reference type; no operators" verbatim="Reference type; no operators" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,2: yes" verbatim="Yes" row="12" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: complex numbers" verbatim="Complex numbers" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: no" verbatim="No" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,2: yes" verbatim="Yes" row="13" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,0: reference types" verbatim="Reference types" row="14" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,1: yes" verbatim="Yes" row="14" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,2: yes" verbatim="Yes" row="14" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,0: arrays" verbatim="Arrays" row="15" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,1: yes" verbatim="Yes" row="15" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,2: yes" verbatim="Yes" row="15" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,0: value types" verbatim="Value types" row="16" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,1: no; only primitive types" verbatim="No; only primitive types" row="16" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,2: yes" verbatim="Yes" row="16" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,0: enumerated types" verbatim="Enumerated types" row="17" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,1: yes; reference type" verbatim="Yes; reference type" row="17" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,2: yes; scalar" verbatim="Yes; scalar" row="17" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,0: lifted (nullable) types" verbatim="Lifted (nullable) types" row="18" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,1: no; but wrapper types" verbatim="No; but wrapper types" row="18" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,2: yes" verbatim="Yes" row="18" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,0: tuples" verbatim="Tuples" row="19" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,1: no" verbatim="No" row="19" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,2: yes" verbatim="Yes" row="19" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,0: pointers" verbatim="Pointers" row="20" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,1: no" verbatim="No" row="20" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,2: yes" verbatim="Yes" row="20" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Enumerations">
    <cells xsi:type="pcmmm:Header" name="0,0: " verbatim="" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: java" verbatim="Java" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: c#" verbatim="C#" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: definition" verbatim="Definition" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: in java, the enumeration type is a class, and its " verbatim="In Java, the enumeration type is a class, and its values are objects (instances) of that class. The only valid values are the ones listed in the enumeration. The enumeration type may declare fields, allowing each individual enumerated value to reference additional data associated uniquely with that specific value. The enumeration type may also declare or override methods, or implement interfaces." row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: enumeration in c# are implicitly derived from the " verbatim="Enumeration in C# are implicitly derived from the  type that again is a value type derivative. The value set of a C# enumeration is defined by the underlying type that can be a signed or unsigned integer type of 8, 16, 32 or 64 bits. The enumeration definition defines names for the selected integer values. By default the first name is assigned the value 0 (zero) and the following names are assigned in increments of 1. Any value of the underlying primitive type is a valid value of the enumeration type, though an explicit cast may be needed to assign it." row="1" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: combining" verbatim="Combining" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: java enumeration set and map collections provide f" verbatim="Java enumeration set and map collections provide functionality to combine multiple enumeration values to a combined value. These special collections allows compiler optimization to minimize the overhead incurred by using collections as the combination mechanism." row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,2: c# supports bit-mapped enumerations where an actua" verbatim="C# supports bit-mapped enumerations where an actual value may be a combination of enumerated values bitwise or'ed together. The formatting and parsing methods implicitly defined by the type will attempt to use these values." row="2" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Reference types">
    <cells xsi:type="pcmmm:Header" name="0,0: reference types" verbatim="Reference types" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: java" verbatim="Java" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: c#" verbatim="C#" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: garbage collection" verbatim="Garbage collection" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: yes" verbatim="Yes" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: yes" verbatim="Yes" row="1" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: weak reference" verbatim="Weak reference" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: yes" verbatim="Yes" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,2: yes" verbatim="Yes" row="2" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: reference queue (interaction with garbage collecti" verbatim="Reference queue (interaction with garbage collection)" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: yes" verbatim="Yes" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,2: yes" verbatim="Yes" row="3" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: soft and phantom references" verbatim="Soft and Phantom references" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: yes" verbatim="Yes" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,2: no" verbatim="No" row="4" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: proxy support" verbatim="Proxy support" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: yes; proxy generation" verbatim="Yes; proxy generation" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,2: yes; object contexts" verbatim="Yes; object contexts" row="5" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Object orientation">
    <cells xsi:type="pcmmm:Header" name="0,0: object orientation" verbatim="Object orientation" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: java" verbatim="Java" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: c#" verbatim="C#" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: classes" verbatim="Classes" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: mandatory" verbatim="mandatory" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: mandatory" verbatim="mandatory" row="1" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: interfaces" verbatim="Interfaces" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: yes" verbatim="Yes" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,2: yes" verbatim="Yes" row="2" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: abstract classes" verbatim="Abstract classes" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: yes" verbatim="Yes" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,2: yes" verbatim="Yes" row="3" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: member accessibility levels" verbatim="Member accessibility levels" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: yes; public, package, protected, private" verbatim="Yes; public, package, protected, private" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,2: yes; public, internal, protected, private, protect" verbatim="Yes; public, internal, protected, private, protected internal" row="4" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: class-level inner classes" verbatim="Class-level inner classes" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: yes; inner classes are class level" verbatim="Yes; inner classes are class level" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,2: yes; all inner classes are class level" verbatim="Yes; all inner classes are class level" row="5" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: instance-level inner classes" verbatim="Instance-level inner classes" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: yes" verbatim="Yes" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,2: no" verbatim="No" row="6" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: statement-level (local) anonymous classes" verbatim="Statement-level (local) anonymous classes" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: yes" verbatim="Yes" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,2: yes; without methods" verbatim="Yes; Without methods" row="7" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: partial class" verbatim="Partial class" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: no" verbatim="No" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,2: yes" verbatim="Yes" row="8" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: implicit (inferred) anonymous classes" verbatim="Implicit (inferred) anonymous classes" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: no" verbatim="No" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,2: yes" verbatim="Yes" row="9" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: deprecation/obsolescence" verbatim="Deprecation/obsolescence" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: yes" verbatim="Yes" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,2: yes" verbatim="Yes" row="10" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: overload versioning" verbatim="Overload versioning" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: some" verbatim="Some" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,2: yes" verbatim="Yes" row="11" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: enums can implement interfaces" verbatim="Enums can implement interfaces" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: yes" verbatim="Yes" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,2: no" verbatim="No" row="12" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: properties" verbatim="Properties" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: no, but see javabeans spec" verbatim="No, but see JavaBeans spec" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,2: yes" verbatim="Yes" row="13" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,0: events" verbatim="Events" row="14" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,1: provided by standard libraries" verbatim="Provided by standard libraries" row="14" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,2: built-in language feature" verbatim="Built-in language feature" row="14" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,0: operator overloading" verbatim="Operator overloading" row="15" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,1: no" verbatim="No" row="15" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,2: yes" verbatim="Yes" row="15" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,0: indexers" verbatim="Indexers" row="16" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,1: no" verbatim="No" row="16" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,2: yes" verbatim="Yes" row="16" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,0: implicit conversions" verbatim="Implicit conversions" row="17" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,1: no" verbatim="No" row="17" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,2: yes" verbatim="Yes" row="17" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,0: explicit conversions" verbatim="Explicit conversions" row="18" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,1: no" verbatim="No" row="18" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,2: yes" verbatim="Yes" row="18" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Fields and initialization">
    <cells xsi:type="pcmmm:Header" name="0,0: fields and initialization" verbatim="Fields and initialization" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: java" verbatim="Java" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: c#" verbatim="C#" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: fields" verbatim="Fields" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: yes" verbatim="Yes" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: yes" verbatim="Yes" row="1" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: constants" verbatim="Constants" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: yes" verbatim="Yes" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,2: yes; but no support for constant passed parameters" verbatim="Yes; but no support for constant passed parameters" row="2" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: static (class) constructors" verbatim="Static (class) constructors" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: yes" verbatim="Yes" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,2: yes" verbatim="Yes" row="3" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: instance constructors" verbatim="Instance constructors" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: yes" verbatim="Yes" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,2: yes" verbatim="Yes" row="4" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: finalizers/destructors" verbatim="Finalizers/destructors" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: yes" verbatim="Yes" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,2: yes" verbatim="Yes" row="5" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: instance initializers" verbatim="Instance initializers" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: yes" verbatim="Yes" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,2: no" verbatim="No" row="6" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: object initialization" verbatim="Object initialization" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: bottom-up (fields and constructors)" verbatim="Bottom-up &#xA;(fields and constructors)" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,2: top-down (fields); bottom-up (constructors)" verbatim="Top-down (fields); bottom-up (constructors)" row="7" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: object initializers" verbatim="Object initializers" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: no" verbatim="No" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,2: yes" verbatim="Yes" row="8" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: collection initializers" verbatim="Collection initializers" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: no; can be modelled" verbatim="No; can be modelled" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,2: yes" verbatim="Yes" row="9" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: array initializers" verbatim="Array initializers" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: yes" verbatim="Yes" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,2: yes" verbatim="Yes" row="10" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Methods and properties">
    <cells xsi:type="pcmmm:Header" name="0,0: methods and properties" verbatim="Methods and properties" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: java" verbatim="Java" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: c#" verbatim="C#" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: static imports" verbatim="Static imports" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: yes" verbatim="Yes" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: no" verbatim="No" row="1" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: virtual methods" verbatim="Virtual methods" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: virtual by default" verbatim="Virtual by default" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,2: non-virtual by default" verbatim="Non-virtual by default" row="2" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: abstract" verbatim="Abstract" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: yes" verbatim="Yes" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,2: yes" verbatim="Yes" row="3" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: sealing" verbatim="Sealing" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: yes" verbatim="Yes" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,2: yes" verbatim="Yes" row="4" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: explicit interface implementation" verbatim="Explicit interface implementation" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: no" verbatim="No" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,2: yes" verbatim="Yes" row="5" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: value (input) parameters" verbatim="Value (input) parameters" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: yes" verbatim="Yes" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,2: yes" verbatim="Yes" row="6" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: reference (input/output) parameters" verbatim="Reference (input/output) parameters" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: no" verbatim="No" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,2: yes" verbatim="Yes" row="7" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: output (output) parameters" verbatim="Output (output) parameters" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: no" verbatim="No" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,2: yes" verbatim="Yes" row="8" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: constant (immutable) parameters" verbatim="Constant (immutable) parameters" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: yes;final parameters" verbatim="Yes;final parameters" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,2: no" verbatim="No" row="9" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: variadic methods" verbatim="Variadic methods" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: yes" verbatim="Yes" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,2: yes" verbatim="Yes" row="10" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: optional arguments" verbatim="Optional arguments" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: no" verbatim="No" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,2: yes" verbatim="Yes" row="11" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: named arguments" verbatim="Named arguments" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: no" verbatim="No" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,2: yes" verbatim="Yes" row="12" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: generator methods" verbatim="Generator methods" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: no" verbatim="No" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,2: yes" verbatim="Yes" row="13" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,0: extension / default methods" verbatim="Extension / default methods" row="14" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,1: yes" verbatim="Yes" row="14" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,2: yes" verbatim="Yes" row="14" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,0: conditional methods" verbatim="Conditional methods" row="15" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,1: no" verbatim="No" row="15" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,2: yes" verbatim="Yes" row="15" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,0: partial methods" verbatim="Partial methods" row="16" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,1: no" verbatim="No" row="16" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,2: yes" verbatim="Yes" row="16" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Constant/immutable parameters">
    <cells xsi:type="pcmmm:Header" name="0,0: java" verbatim="Java" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: c#" verbatim="C#" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="Generics">
    <cells xsi:type="pcmmm:Header" name="0,0: generics" verbatim="Generics" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: java" verbatim="Java" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: c#" verbatim="C#" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: implementation" verbatim="Implementation" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: type erasure" verbatim="Type erasure" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: reification" verbatim="Reification" row="1" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: runtime realization" verbatim="Runtime realization" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: no" verbatim="No" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,2: yes" verbatim="Yes" row="2" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: covariance" verbatim="Covariance" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: yes" verbatim="Yes" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,2: yes" verbatim="Yes" row="3" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: contravariance" verbatim="Contravariance" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: yes" verbatim="Yes" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,2: yes" verbatim="Yes" row="4" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: reference type constraint" verbatim="Reference type constraint" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: yes; implicit" verbatim="Yes; implicit" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,2: yes" verbatim="Yes" row="5" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: value/primitive type constraint" verbatim="Value/primitive type constraint" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: no" verbatim="No" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,2: yes" verbatim="Yes" row="6" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: constructor constraint" verbatim="Constructor constraint" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: no" verbatim="No" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,2: yes" verbatim="Yes" row="7" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: relation constraint" verbatim="Relation constraint" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: yes" verbatim="Yes" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,2: yes" verbatim="Yes" row="8" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: primitive/value type support" verbatim="Primitive/value type support" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: no" verbatim="No" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,2: yes" verbatim="Yes" row="9" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: migration compatibility" verbatim="Migration compatibility" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: yes" verbatim="Yes" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,2: no" verbatim="No" row="10" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Type erasure versus reified generics">
    <cells xsi:type="pcmmm:Header" name="0,0: java" verbatim="Java" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: c#" verbatim="C#" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: type checks and downcasts are injected into client" verbatim="Type checks and downcasts are injected into client code (the code referencing the generics). Compared to non-generic code with manual casts, these casts will be the same, but compared to compile-time verified code that would not need runtime casts and checks, these operations represent a performance overhead." row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: c#/.net generics guarantee type-safety and are ver" verbatim="C#/.NET generics guarantee type-safety and are verified at compile time, making extra checks/casts are unnecessary at runtime. Hence, generic code will run faster than non-generic (or type-erased) code that require casts when handling non-generic or type-erased objects." row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: cannot use primitive types as type parameters; ins" verbatim="Cannot use primitive types as type parameters; instead, the developer must use the wrapper type corresponding to the primitive type. This incurs extra performance overhead by requiring boxing and unboxing conversions as well a memory and garbage collection pressure, as the wrappers will be heap-allocated as opposed to stack-allocated." row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: primitive and value types are allowed as type para" verbatim="Primitive and value types are allowed as type parameters in generic realizations. At runtime code will be synthesized and compiled for each unique combination of type parameters upon first use. Generics that are realized with primitive/value type do not require boxing/unboxing conversions." row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: generic exceptions are not allowed and a type para" verbatim="Generic exceptions are not allowed and a type parameter cannot be used in a catch clause" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: can both define generic exceptions and use those i" verbatim="Can both define generic exceptions and use those in catch clauses" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: static members are shared across all generic reali" verbatim="Static members are shared across all generic realizations (during type erasure all realizations are folded into a single class)" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: static members are separate for each generic reali" verbatim="Static members are separate for each generic realization. A generic realization is a unique class." row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: type parameters cannot be used in declarations of " verbatim="Type parameters cannot be used in declarations of static fields/methods or in definitions of static inner classes" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: no restrictions on use of type parameters" verbatim="No restrictions on use of type parameters" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: cannot create an array where the component type is" verbatim="Cannot create an array where the component type is a generic realization (concrete parameterized type)" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: a generic realization is a 1st class citizen and c" verbatim="A generic realization is a 1st class citizen and can be used as any other class; also an array component" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: cannot create an array where the component type is" verbatim="Cannot create an array where the component type is a type parameter" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: type parameters represent actual, discrete classes" verbatim="Type parameters represent actual, discrete classes and can be used like any other type within the generic definition." row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: there is no class literal for a concrete realizati" verbatim="There is no class literal for a concrete realization of a generic type" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: a generic realization is an actual class." verbatim="A generic realization is an actual class." row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: is not allowed with type parameters or concrete ge" verbatim="is not allowed with type parameters or concrete generic realizations" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: the and operators work the same for type parameter" verbatim="The  and  operators work the same for type parameters as for any other type." row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: cannot create new instances using a type parameter" verbatim="Cannot create new instances using a type parameter as the type" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: with a constructor constraint, generic methods or " verbatim="With a constructor constraint, generic methods or methods of generic classes can create instances of classes that have default constructors." row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: type information is erased during compilation. spe" verbatim="Type information is erased during compilation. Special extensions to reflection must be used to discover the original type." row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: type information about c# generic types is fully p" verbatim="Type information about C# generic types is fully preserved at runtime, and allows complete reflection support as well as instantiation of generic types." row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: reflection cannot be used to construct new generic" verbatim="Reflection cannot be used to construct new generic realizations. During compilation extra code (typecasts) are injected into the client code of generics. This precludes creating new realizations later." row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: reflection can be used to create new realizations " verbatim="Reflection can be used to create new realizations for new combinations of type parameters." row="12" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="Functional programming">
    <cells xsi:type="pcmmm:Header" name="0,0: functional programming" verbatim="Functional programming" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: java" verbatim="Java" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: c#" verbatim="C#" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: method references" verbatim="Method references" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: yes (as of java 8)" verbatim="Yes (As of Java 8)" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: yes" verbatim="Yes" row="1" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: closures" verbatim="Closures" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: yes (as of java 8. all lambdas do not introduce a " verbatim="Yes (As of Java 8. All lambdas do not introduce a new level of scope)" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,2: yes" verbatim="Yes" row="2" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: lambda expressions" verbatim="Lambda expressions" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: yes (as of java 8)" verbatim="Yes (As of Java 8)" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,2: yes" verbatim="Yes" row="3" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: expression trees" verbatim="Expression trees" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: no" verbatim="No" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,2: yes" verbatim="Yes" row="4" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: generic query language" verbatim="Generic query language" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: no" verbatim="No" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,2: yes" verbatim="Yes" row="5" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: tail recursion compiler optimizations" verbatim="Tail recursion compiler optimizations" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: no" verbatim="No" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,2: yes" verbatim="Yes" row="6" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Late binding">
    <cells xsi:type="pcmmm:Header" name="0,0: runtime (dynamic) binding" verbatim="Runtime (dynamic) binding" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: java" verbatim="Java" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: c#" verbatim="C#" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: late-bound (dynamic) type" verbatim="Late-bound (dynamic) type" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: no" verbatim="No" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: yes" verbatim="Yes" row="1" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Runtime type information and manipulation">
    <cells xsi:type="pcmmm:Header" name="0,0: runtime type information and manipulation" verbatim="Runtime type information and manipulation" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: java" verbatim="Java" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: c#" verbatim="C#" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: runtime type information" verbatim="Runtime type information" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: yes; but with type erasure" verbatim="Yes; but with type erasure" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: yes" verbatim="Yes" row="1" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: runtime generics realization" verbatim="Runtime generics realization" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: no" verbatim="No" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,2: yes" verbatim="Yes" row="2" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: runtime type construction" verbatim="Runtime type construction" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: no; third party tools exist" verbatim="No; third party tools exist" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,2: yes" verbatim="Yes" row="3" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Statements">
    <cells xsi:type="pcmmm:Header" name="0,0: statements" verbatim="Statements" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: java" verbatim="Java" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: c#" verbatim="C#" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: loops" verbatim="Loops" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: yes" verbatim="Yes" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: yes" verbatim="Yes" row="1" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: conditionals" verbatim="Conditionals" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: yes" verbatim="Yes" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,2: yes" verbatim="Yes" row="2" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: flow control" verbatim="Flow control" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: yes" verbatim="Yes" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,2: yes" verbatim="Yes" row="3" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: assignment" verbatim="Assignment" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: yes" verbatim="Yes" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,2: yes" verbatim="Yes" row="4" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: exception control" verbatim="Exception control" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: yes" verbatim="Yes" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,2: yes" verbatim="Yes" row="5" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: variable declaration" verbatim="Variable declaration" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: yes" verbatim="Yes" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,2: yes" verbatim="Yes" row="6" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: variable type inference" verbatim="Variable type inference" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: no" verbatim="No" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,2: yes" verbatim="Yes" row="7" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: deterministic disposal (arm-blocks)" verbatim="Deterministic disposal (ARM-blocks)" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: yes (starting with java 7)" verbatim="Yes (starting with Java 7)" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,2: yes" verbatim="Yes" row="8" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Expressions and operators">
    <cells xsi:type="pcmmm:Header" name="0,0: expressions and operators" verbatim="Expressions and operators" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: java" verbatim="Java" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: c#" verbatim="C#" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: arithmetic operators" verbatim="Arithmetic operators" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: yes" verbatim="Yes" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: yes" verbatim="Yes" row="1" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: logical operators" verbatim="Logical operators" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: yes" verbatim="Yes" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,2: yes" verbatim="Yes" row="2" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: bitwise logic operators" verbatim="Bitwise logic operators" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: yes" verbatim="Yes" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,2: yes" verbatim="Yes" row="3" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: conditional" verbatim="Conditional" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: yes" verbatim="Yes" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,2: yes" verbatim="Yes" row="4" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: string concatenation" verbatim="String concatenation" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: yes" verbatim="Yes" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,2: yes" verbatim="Yes" row="5" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: casts" verbatim="Casts" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: yes" verbatim="Yes" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,2: yes" verbatim="Yes" row="6" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: boxing" verbatim="Boxing" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: yes; implicit" verbatim="Yes; implicit" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,2: yes; implicit" verbatim="Yes; implicit" row="7" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: unboxing" verbatim="Unboxing" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: yes; implicit" verbatim="Yes; implicit" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,2: yes; explicit" verbatim="Yes; explicit" row="8" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: lifted operators" verbatim="Lifted operators" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: no" verbatim="No" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,2: yes" verbatim="Yes" row="9" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: overflow control" verbatim="Overflow control" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: no" verbatim="No" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,2: yes" verbatim="Yes" row="10" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: strict floating point evaluation" verbatim="Strict floating point evaluation" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: yes; opt-in/out" verbatim="Yes; opt-in/out" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,2: no" verbatim="No" row="11" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: verbatim (here-)strings" verbatim="Verbatim (here-)strings" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: no" verbatim="No" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,2: yes" verbatim="Yes" row="12" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Exceptions">
    <cells xsi:type="pcmmm:Header" name="0,0: exceptions" verbatim="Exceptions" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: java" verbatim="Java" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: c#" verbatim="C#" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: checked exceptions" verbatim="Checked exceptions" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: yes" verbatim="Yes" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: no" verbatim="No" row="1" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: try-catch-finally" verbatim="Try-catch-finally" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: yes" verbatim="Yes" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,2: yes" verbatim="Yes" row="2" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Arrays and collections">
    <cells xsi:type="pcmmm:Header" name="0,0: arrays and collections" verbatim="Arrays and Collections" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: java" verbatim="Java" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: c#" verbatim="C#" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: abstract data type" verbatim="Abstract data type" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: yes" verbatim="Yes" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: yes" verbatim="Yes" row="1" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: one-dimensional, zero-based index arrays" verbatim="One-dimensional, zero-based index arrays" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: yes" verbatim="Yes" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,2: yes" verbatim="Yes" row="2" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: multidimensional arrays, rectangular (single array" verbatim="Multidimensional arrays, rectangular (single array)" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: no" verbatim="No" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,2: yes" verbatim="Yes" row="3" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: multidimensional arrays, jagged (arrays of arrays)" verbatim="Multidimensional arrays, jagged (arrays of arrays)" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: yes" verbatim="Yes" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,2: yes" verbatim="Yes" row="4" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: non-zero based arrays" verbatim="Non-zero based arrays" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: no" verbatim="No" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,2: some" verbatim="Some" row="5" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: unified arrays and collections" verbatim="Unified arrays and collections" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: no" verbatim="No" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,2: yes" verbatim="Yes" row="6" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: maps/dictionaries" verbatim="Maps/dictionaries" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: yes" verbatim="Yes" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,2: yes" verbatim="Yes" row="7" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: sorted dictionaries" verbatim="Sorted dictionaries" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: yes" verbatim="Yes" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,2: yes" verbatim="Yes" row="8" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: sets" verbatim="Sets" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: yes" verbatim="Yes" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,2: yes" verbatim="Yes" row="9" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: sorted sets" verbatim="Sorted sets" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: yes" verbatim="Yes" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,2: yes" verbatim="Yes" row="10" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: lists/vectors" verbatim="Lists/vectors" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: yes" verbatim="Yes" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,2: yes" verbatim="Yes" row="11" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: queues/stacks" verbatim="Queues/stacks" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: yes" verbatim="Yes" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,2: yes" verbatim="Yes" row="12" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: priority queue" verbatim="Priority queue" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: yes" verbatim="Yes" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,2: no" verbatim="No" row="13" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,0: bags/multisets" verbatim="Bags/multisets" row="14" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,1: yes" verbatim="Yes" row="14" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,2: yes" verbatim="Yes" row="14" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,0: concurrency optimized collections" verbatim="Concurrency optimized collections" row="15" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,1: yes" verbatim="Yes" row="15" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,2: yes" verbatim="Yes" row="15" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Arrays and collections">
    <cells xsi:type="pcmmm:Header" name="0,0: java" verbatim="Java" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: c#" verbatim="C#" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: arrays are implicitly direct specializations of . " verbatim="Arrays are implicitly direct specializations of . They are not unified with collection types." row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: arrays in c# are implicit specializations of the c" verbatim="Arrays in C# are implicit specializations of the  class that implements a number of collection interfaces." row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: arrays and collections are completely separate wit" verbatim="Arrays and collections are completely separate with no unification. Arrays cannot be passed where sequences or collections are expected" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: arrays can be passed where sequences (s) or collec" verbatim="Arrays can be passed where sequences (s) or collections/list interfaces are expected. However, the collection operations that alter the number of elements (insert/add/remove) will throw exceptions as these operations are not supported by arrays." row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: the statement accepts either arrays or s. all coll" verbatim="The  statement accepts either arrays or s. All collections implement . This means that the same short syntax can be used in for-loops." row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: the statement iterates through a sequence using th" verbatim="The  statement iterates through a sequence using the  or interface. Because arrays always implicitly implement these interfaces, the loop will iterate through arrays as well." row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: in both languages arrays are covariant. this means" verbatim="In both languages arrays are covariant. This means that a  array is assignable to variables of  because  is a specialization of (assignable to) . In both languages the arrays will perform a type check when inserting new values because type-safety would otherwise be compromised. This is in contrast to how generic collections have been implemented in both languages." row="4" rowspan="1" colspan="2"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: no multidimensional arrays (rectangular arrays), b" verbatim="No multidimensional arrays (rectangular arrays), but arrays of references to arrays (jagged array)." row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: multidimensional arrays (rectangular arrays), as w" verbatim="Multidimensional arrays (rectangular arrays), as well as arrays of references to arrays (jagged array)." row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: arrays cannot be resized (though use of the method" verbatim="Arrays cannot be resized (though use of the  method can allow for multi-step array resizing)" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: arrays can be resized while preserving existing va" verbatim="Arrays can be resized while preserving existing values using the  static array method." row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: implemented as a retrofit for the library having e" verbatim="Implemented as a retrofit for the  library having extra features, like data structures like sets and linked sets, and has a number of algorithms to manipulate elements of a collection, like finding the largest element based on some Comparator object, finding the smallest element, finding sublists within a list, reverse the contents of a list, shuffle the contents of a list, create immutable versions of a collection, performs sorts, and make binary searches." row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: the c# collections framework consists of classes f" verbatim="The C# collections framework consists of classes from the  and the  namespaces with a number of useful interfaces, abstract classes, and data structures. Net 3.5 added  namespace contains various native extension methods for querying collections, such as , , , , , ,  and many others. Queries using these methods are called LINQ queries." row="7" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="Arrays and collections">
    <cells xsi:type="pcmmm:Header" name="0,0: java" verbatim="Java" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: c#" verbatim="C#" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="Metadata annotations">
    <cells xsi:type="pcmmm:Header" name="0,0: metadata" verbatim="Metadata" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: java" verbatim="Java" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: c#" verbatim="C#" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: metadata annotations/attributes" verbatim="Metadata annotations/attributes" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: interface based; user-defined annotations can be c" verbatim="Interface based; user-defined annotations can be created" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: class based" verbatim="Class based" row="1" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: positional arguments" verbatim="Positional arguments" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: no; unless a single argument" verbatim="No; unless a single argument" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,2: yes" verbatim="Yes" row="2" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: named arguments" verbatim="Named arguments" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: yes" verbatim="Yes" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,2: yes" verbatim="Yes" row="3" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: default values" verbatim="Default values" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: at definition" verbatim="At definition" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,2: through initialization" verbatim="Through initialization" row="4" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: nested types" verbatim="Nested types" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: yes" verbatim="Yes" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,2: yes" verbatim="Yes" row="5" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: specialization" verbatim="Specialization" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: no" verbatim="No" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,2: yes" verbatim="Yes" row="6" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: conditional metadata" verbatim="Conditional metadata" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: no" verbatim="No" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,2: yes" verbatim="Yes" row="7" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Preprocessing, compilation and packaging">
    <cells xsi:type="pcmmm:Header" name="0,0: preprocessing, compilation and packaging" verbatim="Preprocessing, Compilation and Packaging" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: java" verbatim="Java" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: c#" verbatim="C#" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: namespaces" verbatim="Namespaces" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: packages" verbatim="Packages" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: namespaces" verbatim="Namespaces" row="1" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: file contents" verbatim="File contents" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: restricted" verbatim="Restricted" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,2: free" verbatim="Free" row="2" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: packaging" verbatim="Packaging" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: package" verbatim="Package" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,2: assembly" verbatim="Assembly" row="3" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: classes/assembly search path" verbatim="Classes/assembly search path" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: classpath" verbatim="ClassPath" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,2: both compile-time and runtime" verbatim="Both compile-time and runtime" row="4" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: conditional compilation" verbatim="Conditional compilation" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: no" verbatim="No" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,2: yes" verbatim="Yes" row="5" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: custom errors/warnings" verbatim="Custom errors/warnings" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: no" verbatim="No" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,2: yes" verbatim="Yes" row="6" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: explicit regions" verbatim="Explicit regions" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: no" verbatim="No" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,2: yes" verbatim="Yes" row="7" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Threading and asynchronous features">
    <cells xsi:type="pcmmm:Header" name="0,0: threading and synchronization" verbatim="Threading and Synchronization" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: java" verbatim="Java" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: c#" verbatim="C#" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: threads" verbatim="Threads" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: yes" verbatim="Yes" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: yes" verbatim="Yes" row="1" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: thread pool" verbatim="Thread pool" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: yes" verbatim="Yes" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,2: yes" verbatim="Yes" row="2" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: task-based parallelism" verbatim="Task-based parallelism" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: partial" verbatim="Partial" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,2: yes" verbatim="Yes" row="3" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: semaphores" verbatim="Semaphores" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: yes" verbatim="Yes" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,2: yes" verbatim="Yes" row="4" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: monitors" verbatim="Monitors" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: yes" verbatim="Yes" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,2: yes" verbatim="Yes" row="5" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: thread-local variables" verbatim="Thread-local variables" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: yes" verbatim="Yes" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,2: yes; threadstaticattribute" verbatim="Yes; ThreadStaticAttribute" row="6" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Native interoperability">
    <cells xsi:type="pcmmm:Header" name="0,0: native interoperability" verbatim="Native interoperability" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: java" verbatim="Java" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: c#" verbatim="C#" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: cross-language interoperability" verbatim="Cross-language interoperability" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: no (only with corba or jni)" verbatim="No (only with CORBA or JNI)" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: yes; c# was designed for it" verbatim="Yes; C# was designed for it" row="1" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: external/native methods" verbatim="External/native methods" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: yes" verbatim="Yes" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,2: yes" verbatim="Yes" row="2" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: marshalling" verbatim="Marshalling" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: external glue code required" verbatim="External glue code required" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,2: yes; metadata controlled" verbatim="Yes; metadata controlled" row="3" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: pointer and arithmetics" verbatim="Pointer and arithmetics" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: no" verbatim="No" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,2: yes" verbatim="Yes" row="4" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: native types" verbatim="Native types" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: no" verbatim="No" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,2: yes" verbatim="Yes" row="5" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: fixed-size buffers" verbatim="Fixed-size buffers" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: no" verbatim="No" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,2: yes" verbatim="Yes" row="6" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: explicit stack allocation" verbatim="Explicit stack allocation" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: no" verbatim="No" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,2: yes" verbatim="Yes" row="7" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: address-of" verbatim="Address-of" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: no" verbatim="No" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,2: yes" verbatim="Yes" row="8" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: object pinning (fix variable to address)" verbatim="Object pinning (fix variable to address)" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: no" verbatim="No" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,2: yes" verbatim="Yes" row="9" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Platform support">
    <cells xsi:type="pcmmm:Header" name="0,0: platform support" verbatim="Platform support" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: java" verbatim="Java" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: c#" verbatim="C#" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: linux" verbatim="Linux" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: yes" verbatim="Yes" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: via mono" verbatim="via Mono" row="1" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: mac os x" verbatim="Mac OS X" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: yes" verbatim="Yes" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,2: via mono" verbatim="via Mono" row="2" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: solaris" verbatim="Solaris" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: yes" verbatim="Yes" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,2: via mono" verbatim="via Mono" row="3" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: freebsd" verbatim="FreeBSD" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: yes" verbatim="Yes" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,2: via mono" verbatim="via Mono" row="4" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: aix" verbatim="AIX" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: yes" verbatim="Yes" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,2: partial?" verbatim="Partial?" row="5" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: ios" verbatim="iOS" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: only partially via c# or objective c code generato" verbatim="only partially via C# or Objective C code generators, or the HTML5-based Oracle ADF Mobile framework" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,2: via mono" verbatim="via Mono" row="6" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: windows" verbatim="Windows" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: yes" verbatim="Yes" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,2: yes" verbatim="Yes" row="7" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: windows mobile" verbatim="Windows Mobile" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: yes" verbatim="Yes" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,2: yes" verbatim="Yes" row="8" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: windows phone" verbatim="Windows Phone" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: via c# code generator only" verbatim="via C# code generator only" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,2: yes" verbatim="Yes" row="9" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: android" verbatim="Android" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: via dalvik" verbatim="via Dalvik" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,2: via mono" verbatim="via Mono" row="10" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: feature phones" verbatim="Feature phones" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: yes" verbatim="Yes" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,2: no" verbatim="No" row="11" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: symbian" verbatim="Symbian" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: yes" verbatim="Yes" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,2: deprecated" verbatim="Deprecated" row="12" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: blackberry" verbatim="Blackberry" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: yes" verbatim="Yes" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,2: via cross-compiler" verbatim="via cross-compiler" row="13" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Special feature keywords">
    <cells xsi:type="pcmmm:Header" name="0,0: keyword" verbatim="keyword" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: feature, example usage" verbatim="feature, example usage" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: ," verbatim="," row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: in c#, statement blocks or expressions can enable " verbatim="In C#,  statement blocks or expressions can enable run-time checking for arithmetic overflow." row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: ," verbatim="," row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: c# implements properties as part of the language s" verbatim="C# implements properties as part of the language syntax with their optional corresponding  and  accessors, as an alternative for the accessor method used in Java, which is not a language feature but a coding-pattern based on method name conventions." row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: " verbatim="" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: c# supports the keyword. this can occasionally be " verbatim="C# supports the  keyword. This can occasionally be useful, for example for implementing finite state machine or for generated code, but the use of a more structured method of control flow is usually recommended (see criticism of the goto statement). Java does not support the  statement (but  is a reserved word). However, Java does support labeled  and  statements, which in certain situations can be used when a  statement might otherwise be used." row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: " verbatim="" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: in c#, the keyword is a shorthand for synchronizin" verbatim="In C#, the  keyword is a shorthand for synchronizing access to a block of code across threads (using a ), wrapped in a  &#x2026;  block." row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: ," verbatim="," row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: c# has support for output and reference parameters" verbatim="C# has support for output and reference parameters. These allow returning multiple output values from a method, or passing values by reference." row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: " verbatim="" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: java uses to guarantee the results of floating poi" verbatim="Java uses  to guarantee the results of floating point operations remain the same across platforms." row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: " verbatim="" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: in c#, the switch statement also operates on strin" verbatim="In C#, the switch statement also operates on strings and longs. Fallthrough is allowed for empty statements and possible via 'goto case' for statements containing code. Java's switch statement does not operate on strings (before Java 7) nor  primitive type but falls through for all statements (excluding those with '')." row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: " verbatim="" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: in java, the keyword is a shorthand for synchroniz" verbatim="In Java, the  keyword is a shorthand for synchronizing access to a block of code across threads (using a ), wrapped in a  &#x2026;  block." row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: " verbatim="" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: java requires every method to declare the checked " verbatim="Java requires every method to declare the checked exceptions or superclasses of the checked exceptions that it can throw. Any method can also optionally declare the unchecked exception that it throws. C# has no such syntax." row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: " verbatim="" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: in c#, causes the method (implemented via the inte" verbatim="In C#,  causes the  method (implemented via the  interface) of the object declared to be executed after the code block has run or when an exception is thrown within the code block.In Java SE 7 a similar construct has been added called try-with-resources :" row="10" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="Input/output">
    <cells xsi:type="pcmmm:Header" name="0,0: java" verbatim="Java" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: c#" verbatim="C#" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: " verbatim="" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: notes on the java implementation: files.readallbyt" verbatim="Notes on the Java implementation: Files.readAllBytes method reads a whole file into a byte array.&#xA; Files.write method writes a byte array into an output file, indicated by a Path object.&#xA; Files.write method also takes care of buffering and closing the output stream.&#xA; An explicit option should be specified for the Files.write method whether it should overwrite or append to the output file.&#xA; StandardOpenOption.CREATE indicates that the output file should be created or overwritten if exists." row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: notes on the c# implementation: the method returns" verbatim="Notes on the C# implementation: The  method returns an enumerable object which upon enumeration will read the file one line at a time.&#xA; The  method takes an enumerable and retrieves a line at a time and writes it until the enumeration ends.&#xA; The underlying reader will automatically allocate a buffer, thus there is no need to explicitly introduce a buffered stream.&#xA;  automatically closes the output stream, also in the case of an abnormal termination." row="2" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="Integration of library defined types">
    <cells xsi:type="pcmmm:Header" name="0,0: java" verbatim="Java" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: c#" verbatim="C#" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: " verbatim="" row="1" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="C# delegates and equivalent Java constructs">
    <cells xsi:type="pcmmm:Header" name="0,0: java" verbatim="Java" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: c#" verbatim="C#" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: " verbatim="" row="1" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="Type lifting">
    <cells xsi:type="pcmmm:Header" name="0,0: java" verbatim="Java" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: c#" verbatim="C#" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: " verbatim="" row="1" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="Interoperability with dynamic languages">
    <cells xsi:type="pcmmm:Header" name="0,0: java" verbatim="Java" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: c#" verbatim="C#" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: " verbatim="" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: " verbatim="" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: " verbatim="" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: notes for the java implementation: ruby accessors " verbatim="Notes for the Java implementation: Ruby accessors names are generated from the attribute name with a  suffix. When assigning values, Java developers must use the Ruby accessor method name.&#xA; Dynamic objects from a foreign language are not first-class objects in that they must be manipulated through an API." row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: notes for the c# implementation: objects returned " verbatim="Notes for the C# implementation: Objects returned from properties or methods of  objects are themselves of  type. When type inference (the  keyword) is used, the variables calc and answer are inferred dynamic/late-bound.&#xA; Dynamic, late-bounds objects are first-class citizens that can be manipulated using C# syntax even though they have been created by an external language.&#xA; is a reserved word. The  prefix allows keywords to be used as identifiers." row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,2: " verbatim="" row="3" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Pass by reference">
    <cells xsi:type="pcmmm:Header" name="0,0: java" verbatim="Java" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: c#" verbatim="C#" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: ||" verbatim="||" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: " verbatim="" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: " verbatim="" row="2" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="Fibonacci sequence">
    <cells xsi:type="pcmmm:Header" name="0,0: java" verbatim="Java" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: c#" verbatim="C#" rowspan="1" column="1" colspan="1"/>
  </matrices>
</pcmmm:PCM>
