<?xml version="1.0" encoding="ASCII"?>
<pcmmm:PCM xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pcmmm="pcmmm" name="Comparison_of_programming_languages_(string_functions)">
  <matrices name="CharAt">
    <cells xsi:type="pcmmm:Header" name="0,0: definition" verbatim="Definition" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="0,1: returns character." verbatim="returns character." rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="1,0: description" verbatim="Description" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: returns character at index in the string." verbatim="Returns character at index in the string." row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="2,0: equivalent" verbatim="Equivalent" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: see substring of length 1 character." verbatim="See substring of length 1 character." row="2" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="CharAt">
    <cells xsi:type="pcmmm:Header" name="0,0: format" verbatim="Format" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: languages" verbatim="Languages" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: base index" verbatim="Base index" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: algol 68, pascal, object pascal (delphi), seed7" verbatim="ALGOL 68, Pascal, Object Pascal (Delphi), Seed7" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: 1" verbatim="1" row="1" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: " verbatim="" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: c, c++, c#, d, freebasic, go, python, php, ruby, w" verbatim="C, C++, C#, D, FreeBASIC, Go, Python, PHP, Ruby, Windows PowerShell, JavaScript, Ya" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,2: 0" verbatim="0" row="2" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: " verbatim="" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: php (deprecated in 5.3)" verbatim="PHP (deprecated in 5.3)" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,2: 0" verbatim="0" row="3" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: " verbatim="" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: ada" verbatim="Ada" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,2: &#x2265;1" verbatim="&#x2265;1" row="4" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: " verbatim="" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: vb" verbatim="VB" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,2: 1" verbatim="1" row="5" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: " verbatim="" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: basic" verbatim="BASIC" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,2: 1" verbatim="1" row="6" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: " verbatim="" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: vb.net" verbatim="VB.NET" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,2: 0" verbatim="0" row="7" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: " verbatim="" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: fortran" verbatim="Fortran" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,2: 1" verbatim="1" row="8" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: " verbatim="" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: java, javascript" verbatim="Java, JavaScript" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,2: 0" verbatim="0" row="9" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: " verbatim="" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: ocaml, f#" verbatim="OCaml, F#" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,2: 0" verbatim="0" row="10" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: " verbatim="" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: standard ml" verbatim="Standard ML" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,2: 0" verbatim="0" row="11" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: " verbatim="" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: haskell" verbatim="Haskell" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,2: 0" verbatim="0" row="12" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: " verbatim="" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: scheme" verbatim="Scheme" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,2: 0" verbatim="0" row="13" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,0: " verbatim="" row="14" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,1: common lisp" verbatim="Common Lisp" row="14" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,2: 0" verbatim="0" row="14" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,0: " verbatim="" row="15" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,1: islisp" verbatim="ISLISP" row="15" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,2: 0" verbatim="0" row="15" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,0: " verbatim="" row="16" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,1: clojure" verbatim="Clojure" row="16" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,2: 0" verbatim="0" row="16" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,0: " verbatim="" row="17" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,1: perl" verbatim="Perl" row="17" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,2: 0" verbatim="0" row="17" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,0: " verbatim="" row="18" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,1: pl/i" verbatim="PL/I" row="18" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,2: 1" verbatim="1" row="18" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,0: " verbatim="" row="19" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,1: c++ (stl) (w/ bounds checking)" verbatim="C++ (STL) (w/ bounds checking)" row="19" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,2: 0" verbatim="0" row="19" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,0: " verbatim="" row="20" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,1: erlang" verbatim="Erlang" row="20" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,2: 1" verbatim="1" row="20" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="21,0: " verbatim="" row="21" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="21,1: objective-c ( only)" verbatim="Objective-C ( only)" row="21" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="21,2: 0" verbatim="0" row="21" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="22,0: " verbatim="" row="22" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="22,1: lua" verbatim="Lua" row="22" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="22,2: 1" verbatim="1" row="22" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="23,0: " verbatim="" row="23" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="23,1: smalltalk (w/ bounds checking)" verbatim="Smalltalk (w/ bounds checking)" row="23" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="23,2: 1" verbatim="1" row="23" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="24,0: " verbatim="" row="24" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="24,1: tcl" verbatim="Tcl" row="24" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="24,2: 0" verbatim="0" row="24" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="25,0: " verbatim="" row="25" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="25,1: mathematica" verbatim="Mathematica" row="25" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="25,2: 1" verbatim="1" row="25" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="26,0: " verbatim="" row="26" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="26,1: eiffel" verbatim="Eiffel" row="26" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="26,2: 1" verbatim="1" row="26" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Compare (integer result)">
    <cells xsi:type="pcmmm:Header" name="0,0: definition" verbatim="Definition" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="0,1: returns integer." verbatim="returns integer." rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="1,0: description" verbatim="Description" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: compares two strings to each other. if they are eq" verbatim="Compares two strings to each other.  If they are equivalent, a zero is returned. Otherwise, most of these routines will return a positive or negative result corresponding to whether string is lexicographically greater than, or less than, respectively, than string. The exceptions are the Scheme and REXX routines which return the index of the first mismatch." row="1" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="Compare (integer result)">
    <cells xsi:type="pcmmm:Header" name="0,0: format" verbatim="Format" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: languages" verbatim="Languages" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: algol 68" verbatim="ALGOL 68" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: " verbatim="" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: python (before 3.0 only)" verbatim="Python (before 3.0 only)" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: " verbatim="" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: python (since 3.0)" verbatim="Python (since 3.0)" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: " verbatim="" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: c, php" verbatim="C, PHP" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: " verbatim="" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: d" verbatim="D" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: " verbatim="" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: vb, object pascal (delphi)" verbatim="VB, Object Pascal (Delphi)" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: " verbatim="" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: perl" verbatim="Perl" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: " verbatim="" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: ruby" verbatim="Ruby" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: " verbatim="" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: c++ (stl)" verbatim="C++ (STL)" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: " verbatim="" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: rexx, seed7" verbatim="REXX, Seed7" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: " verbatim="" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: pascal, object pascal (delphi)" verbatim="Pascal, Object Pascal (Delphi)" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: " verbatim="" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: java" verbatim="Java" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: " verbatim="" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: vb .net, c#, f#" verbatim="VB .NET, C#, F#" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,0: " verbatim="" row="14" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,1: clojure" verbatim="Clojure" row="14" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,0: " verbatim="" row="15" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,1: common lisp" verbatim="Common Lisp" row="15" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,0: " verbatim="" row="16" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,1: scheme (srfi 13)" verbatim="Scheme (SRFI 13)" row="16" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,0: " verbatim="" row="17" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,1: islisp" verbatim="ISLISP" row="17" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,0: " verbatim="" row="18" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,1: ocaml" verbatim="OCaml" row="18" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,0: " verbatim="" row="19" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,1: standard ml" verbatim="Standard ML" row="19" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,0: " verbatim="" row="20" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,1: haskell" verbatim="Haskell" row="20" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="21,0: " verbatim="" row="21" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="21,1: windows powershell" verbatim="Windows PowerShell" row="21" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="22,0: " verbatim="" row="22" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="22,1: objective-c ( only)" verbatim="Objective-C ( only)" row="22" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="23,0: " verbatim="" row="23" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="23,1: fortran" verbatim="Fortran" row="23" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="24,0: " verbatim="" row="24" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="24,1: javascript" verbatim="JavaScript" row="24" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="25,0: " verbatim="" row="25" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="25,1: go" verbatim="Go" row="25" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="26,0: " verbatim="" row="26" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="26,1: tcl" verbatim="Tcl" row="26" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="27,0: " verbatim="" row="27" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="27,1: pl/i" verbatim="PL/I" row="27" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="Compare (relational operator-based, Boolean result)">
    <cells xsi:type="pcmmm:Header" name="0,0: definition" verbatim="Definition" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="0,1: or returns boolean." verbatim="OR  returns Boolean." rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="1,0: description" verbatim="Description" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: lexicographically compares two strings using a rel" verbatim="Lexicographically compares two strings using a relational operator or function. Boolean result returned." row="1" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="Compare (relational operator-based, Boolean result)">
    <cells xsi:type="pcmmm:Header" name="0,0: format" verbatim="Format" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: languages" verbatim="Languages" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: , where can be any of and" verbatim=", where  can be any of  and" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: pascal, object pascal (delphi), ocaml, seed7, stan" verbatim="Pascal, Object Pascal (Delphi), OCaml, Seed7, Standard ML, BASIC, VB, VB .NET, F#" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: , where can be any of and ; also: and" verbatim=", where  can be any of  and ; Also:  and" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: algol 68" verbatim="ALGOL 68" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: , where can be any of and (operators starting with" verbatim=", where  can be any of  and  (operators starting with '' are case-insensitive)" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: scheme" verbatim="Scheme" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: , where can be any of and (operators starting with" verbatim=", where  can be any of  and  (operators starting with '' are case-insensitive)" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: scheme (srfi 13)" verbatim="Scheme (SRFI 13)" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: , where can be any of and (the verbal operators ar" verbatim=", where  can be any of  and  (the verbal operators are case-insensitive)" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: common lisp" verbatim="Common Lisp" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: , where can be any of and" verbatim=", where  can be any of  and" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: islisp" verbatim="ISLISP" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: , where can be any of and" verbatim=", where  can be any of  and" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: rexx" verbatim="REXX" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: , where can be any of and" verbatim=", where  can be any of  and" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: pl/i" verbatim="PL/I" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: , where can be any of and" verbatim=", where  can be any of  and" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: ada" verbatim="Ada" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: , where can be any of and" verbatim=", where  can be any of  and" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: erlang" verbatim="Erlang" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: , where can be any of and" verbatim=", where  can be any of  and" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: haskell" verbatim="Haskell" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: , where can be any of and" verbatim=", where  can be any of  and" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: perl" verbatim="Perl" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: , where can be any of and" verbatim=", where  can be any of  and" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: c++ (stl), c#, d, go, javascript, python, php, rub" verbatim="C++ (STL), C#, D, Go, JavaScript, Python, PHP, Ruby, Ya" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,0: , where can be any of and (operators starting with" verbatim=", where  can be any of  and   (operators starting with '' are case-sensitive)" row="14" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,1: windows powershell" verbatim="Windows PowerShell" row="14" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,0: , where can be any of and" verbatim=", where  can be any of  and" row="15" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,1: lua" verbatim="Lua" row="15" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,0: , where can be any of and" verbatim=", where  can be any of  and" row="16" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,1: smalltalk" verbatim="Smalltalk" row="16" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,0: , where can be any of and and" verbatim=", where  can be any of  and  and" row="17" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,1: fortran." verbatim="Fortran." row="17" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="Concatenation">
    <cells xsi:type="pcmmm:Header" name="0,0: definition" verbatim="Definition" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="0,1: returns string." verbatim="returns string." rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="1,0: description" verbatim="Description" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: concatenates (joins) two strings to each other, re" verbatim="Concatenates (joins) two strings to each other, returning the combined string. Note that some languages like C have mutable strings, so really the second string is being appended to the first string and the mutated string is returned." row="1" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="Concatenation">
    <cells xsi:type="pcmmm:Header" name="0,0: format" verbatim="Format" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: languages" verbatim="Languages" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: ada, freebasic, seed7, basic, vb, vb .net" verbatim="Ada, FreeBASIC, Seed7, BASIC, VB, VB .NET" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: " verbatim="" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: c, c++ ( only)" verbatim="C, C++ ( only)" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: " verbatim="" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: perl, php" verbatim="Perl, PHP" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: " verbatim="" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: algol 68, c++ (stl), c#, freebasic, go, pascal, ob" verbatim="ALGOL 68, C++ (STL), C#, FreeBASIC, Go, Pascal, Object Pascal (Delphi), Java, JavaScript, Windows PowerShell, Python, Ruby, Rust, F#, Turing, VB, Ya" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: " verbatim="" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: d" verbatim="D" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: " verbatim="" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: scheme, islisp" verbatim="Scheme, ISLISP" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: " verbatim="" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: common lisp" verbatim="Common Lisp" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: " verbatim="" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: clojure" verbatim="Clojure" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: " verbatim="" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: rexx, sql, pl/i" verbatim="REXX, SQL, PL/I" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: " verbatim="" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: fortran" verbatim="Fortran" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: " verbatim="" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: erlang, haskell" verbatim="Erlang, Haskell" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: " verbatim="" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: ocaml, standard ml, f#" verbatim="OCaml, Standard ML, F#" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: " verbatim="" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: objective-c ( only)" verbatim="Objective-C ( only)" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,0: " verbatim="" row="14" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,1: lua" verbatim="Lua" row="14" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,0: " verbatim="" row="15" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,1: smalltalk" verbatim="Smalltalk" row="15" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,0: " verbatim="" row="16" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,1: snobol" verbatim="SNOBOL" row="16" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,0: " verbatim="" row="17" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,1: bash shell" verbatim="Bash shell" row="17" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,0: " verbatim="" row="18" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,1: mathematica" verbatim="Mathematica" row="18" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="Contains">
    <cells xsi:type="pcmmm:Header" name="0,0: definition" verbatim="Definition" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="0,1: returns boolean" verbatim="returns boolean" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="1,0: description" verbatim="Description" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: returns whether string contains substring as a sub" verbatim="Returns whether string contains substring as a substring. This is equivalent to using #Find and then detecting that it does not result in the failure condition listed in the third column of the #Find section. However, some languages have a simpler way of expressing this test." row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: related" verbatim="Related" row="2" rowspan="1" colspan="1"/>
  </matrices>
  <matrices name="Contains">
    <cells xsi:type="pcmmm:Header" name="0,0: format" verbatim="Format" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: languages" verbatim="Languages" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: algol 68" verbatim="ALGOL 68" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: " verbatim="" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: object pascal (delphi)" verbatim="Object Pascal (Delphi)" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: " verbatim="" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: c#, vb .net, windows powershell, f#" verbatim="C#, VB .NET, Windows PowerShell, F#" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: " verbatim="" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: java (1.5+)" verbatim="Java (1.5+)" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: " verbatim="" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: javascript" verbatim="JavaScript" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: " verbatim="" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: php" verbatim="PHP" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: " verbatim="" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: seed7" verbatim="Seed7" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: " verbatim="" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: python (2.3+)" verbatim="Python (2.3+)" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: " verbatim="" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: lua" verbatim="Lua" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: " verbatim="" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: ruby" verbatim="Ruby" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: " verbatim="" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: haskell (ghc 6.6+)" verbatim="Haskell (GHC 6.6+)" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: " verbatim="" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: smalltalk (squeak, pharo)" verbatim="Smalltalk (Squeak, Pharo)" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: " verbatim="" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: standard ml" verbatim="Standard ML" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,0: " verbatim="" row="14" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,1: common lisp" verbatim="Common Lisp" row="14" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,0: " verbatim="" row="15" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,1: islisp" verbatim="ISLISP" row="15" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,0: " verbatim="" row="16" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,1: clojure" verbatim="Clojure" row="16" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,0: " verbatim="" row="17" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,1: mathematica" verbatim="Mathematica" row="17" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,0: " verbatim="" row="18" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,1: pl/i" verbatim="PL/I" row="18" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,0: " verbatim="" row="19" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,1: go" verbatim="Go" row="19" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,0: " verbatim="" row="20" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,1: c++" verbatim="C++" row="20" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="Equality">
    <cells xsi:type="pcmmm:Header" name="0,0: format" verbatim="Format" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: languages" verbatim="Languages" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: python, c++ (stl), c#, go, javascript (similarity)" verbatim="Python, C++ (STL), C#, Go, JavaScript (similarity), PHP (similarity), Ruby, Erlang, Haskell, Lua, D, Mathematica, Ya" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: " verbatim="" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: javascript, php" verbatim="JavaScript, PHP" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: " verbatim="" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: fortran" verbatim="Fortran" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: " verbatim="" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: c" verbatim="C" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: " verbatim="" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: scheme" verbatim="Scheme" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: " verbatim="" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: common lisp, islisp" verbatim="Common Lisp, ISLISP" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: " verbatim="" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: algol 68, ada, object pascal (delphi), ocaml, pasc" verbatim="ALGOL 68, Ada, Object Pascal (Delphi), OCaml, Pascal, REXX, Seed7, Standard ML, BASIC, VB, VB .NET, F#, Smalltalk, PL/I" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: " verbatim="" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: bourne shell" verbatim="Bourne Shell" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: " verbatim="" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: perl" verbatim="Perl" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: " verbatim="" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: java" verbatim="Java" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: " verbatim="" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: c#" verbatim="C#" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: " verbatim="" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: windows powershell" verbatim="Windows PowerShell" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: " verbatim="" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: objective-c ( only)" verbatim="Objective-C ( only)" row="13" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="Find">
    <cells xsi:type="pcmmm:Header" name="0,0: definition" verbatim="Definition" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="0,1: returns integer" verbatim="returns integer" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="1,0: description" verbatim="Description" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: returns the position of the start of the first occ" verbatim="Returns the position of the start of the first occurrence of substring in string. If the substring is not found most of these routines return an invalid index value &#x2013; -1 where indexes are 0-based, 0 where they are 1-based &#x2013; or some value to be interpreted as Boolean FALSE." row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: related" verbatim="Related" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: instrrev" verbatim="instrrev" row="2" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="Find">
    <cells xsi:type="pcmmm:Header" name="0,0: format" verbatim="Format" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: languages" verbatim="Languages" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: if not found" verbatim="If not found" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: algol 68" verbatim="ALGOL 68" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: returns bool: true or false, and position in ref i" verbatim="returns BOOL: TRUE or FALSE, and position in REF INT pos." row="1" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: " verbatim="" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: vb (positions start at 1)" verbatim="VB (positions start at 1)" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,2: returns 0" verbatim="returns 0" row="2" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: " verbatim="" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: basic (positions start at 1)" verbatim="BASIC (positions start at 1)" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,2: returns 0" verbatim="returns 0" row="3" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: " verbatim="" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: awk" verbatim="AWK" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,2: returns 0" verbatim="returns 0" row="4" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: " verbatim="" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: perl" verbatim="Perl" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,2: returns -1" verbatim="returns -1" row="5" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: " verbatim="" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: freebasic" verbatim="FreeBASIC" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,2: returns 0" verbatim="returns 0" row="6" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: " verbatim="" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: php" verbatim="PHP" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,2: returns false" verbatim="returns FALSE" row="7" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: " verbatim="" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: ingres" verbatim="Ingres" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,2: returns string length + 1" verbatim="returns string length + 1" row="8" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: " verbatim="" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: c, c++ ( only, returns pointer to first character)" verbatim="C, C++ ( only, returns pointer to first character)" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,2: returns null" verbatim="returns NULL" row="9" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: " verbatim="" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: d" verbatim="D" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,2: returns -1" verbatim="returns -1" row="10" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: " verbatim="" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: seed7" verbatim="Seed7" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,2: returns 0" verbatim="returns 0" row="11" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: " verbatim="" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: go" verbatim="Go" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,2: returns -1" verbatim="returns -1" row="12" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: " verbatim="" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: pascal, object pascal (delphi)" verbatim="Pascal, Object Pascal (Delphi)" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,2: returns 0" verbatim="returns 0" row="13" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,0: " verbatim="" row="14" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,1: rexx" verbatim="REXX" row="14" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,2: returns 0" verbatim="returns 0" row="14" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,0: " verbatim="" row="15" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,1: c++ (stl)" verbatim="C++ (STL)" row="15" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,2: returns std::string::npos" verbatim="returns std::string::npos" row="15" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,0: " verbatim="" row="16" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,1: python" verbatim="Python" row="16" rowspan="2" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,2: returns -1" verbatim="returns -1" row="16" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,0: " verbatim="" row="17" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,2: raises valueerror" verbatim="raises ValueError" row="17" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,0: " verbatim="" row="18" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,1: ruby" verbatim="Ruby" row="18" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,2: returns nil" verbatim="returns nil" row="18" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,0: " verbatim="" row="19" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,1: java, javascript" verbatim="Java, JavaScript" row="19" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,2: returns -1" verbatim="returns -1" row="19" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,0: " verbatim="" row="20" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,1: vb .net, c#, windows powershell, f#" verbatim="VB .NET, C#, Windows PowerShell, F#" row="20" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,2: returns -1" verbatim="returns -1" row="20" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="21,0: " verbatim="" row="21" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="21,1: erlang" verbatim="Erlang" row="21" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="21,2: returns 0" verbatim="returns 0" row="21" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="22,0: " verbatim="" row="22" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="22,1: scheme (srfi 13)" verbatim="Scheme (SRFI 13)" row="22" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="22,2: returns #f" verbatim="returns #f" row="22" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="23,0: " verbatim="" row="23" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="23,1: common lisp" verbatim="Common Lisp" row="23" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="23,2: returns nil" verbatim="returns NIL" row="23" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="24,0: " verbatim="" row="24" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="24,1: islisp" verbatim="ISLISP" row="24" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="24,2: returns" verbatim="returns" row="24" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="25,0: " verbatim="" row="25" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="25,1: haskell (returns just index)" verbatim="Haskell (returns Just index)" row="25" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="25,2: returns nothing" verbatim="returns Nothing" row="25" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="26,0: " verbatim="" row="26" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="26,1: ocaml" verbatim="OCaml" row="26" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="26,2: raises not_found" verbatim="raises Not_found" row="26" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="27,0: " verbatim="" row="27" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="27,1: standard ml" verbatim="Standard ML" row="27" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="27,2: returns string length" verbatim="returns string length" row="27" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="28,0: " verbatim="" row="28" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="28,1: objective-c ( only)" verbatim="Objective-C ( only)" row="28" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="28,2: returns nsnotfound" verbatim="returns NSNotFound" row="28" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="29,0: " verbatim="" row="29" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="29,1: lua" verbatim="Lua" row="29" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="29,2: returns nil" verbatim="returns nil" row="29" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="30,0: " verbatim="" row="30" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="30,1: smalltalk (squeak, pharo)" verbatim="Smalltalk (Squeak, Pharo)" row="30" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="30,2: evaluate ablock which is a block closure (or any o" verbatim="evaluate aBlock which is a block closure (or any object understanding value) &#xA; returns 0" row="30" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="31,0: " verbatim="" row="31" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="31,1: fortran" verbatim="Fortran" row="31" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="31,2: returns 0 if substring is not in string; returns l" verbatim="returns 0 if substring is not in string; returns LEN(string)+1 if substring is empty" row="31" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="32,0: " verbatim="" row="32" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="32,1: sql" verbatim="SQL" row="32" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="32,2: returns 0 (positions start at 1)" verbatim="returns 0 (positions start at 1)" row="32" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="33,0: " verbatim="" row="33" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="33,1: pl/i" verbatim="PL/I" row="33" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="33,2: returns 0 (positions start at 1)" verbatim="returns 0 (positions start at 1)" row="33" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Find character">
    <cells xsi:type="pcmmm:Header" name="0,0: definition" verbatim="Definition" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="0,1: returns integer" verbatim="returns integer" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="1,0: description" verbatim="Description" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: returns the position of the start of the first occ" verbatim="Returns the position of the start of the first occurrence of the character char in string. If the character is not found most of these routines return an invalid index value &#x2013; -1 where indexes are 0-based, 0 where they are 1-based &#x2013; or some value to be interpreted as Boolean FALSE. This can be accomplished as a special case of #Find, with a string of one character; but it may be simpler or more efficient in many languages to locate just one character. Also, in many languages, characters and strings are different types, so it is convenient to have such a function." row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: related" verbatim="Related" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: find" verbatim="find" row="2" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="Find character">
    <cells xsi:type="pcmmm:Header" name="0,0: format" verbatim="Format" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: languages" verbatim="Languages" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: if not found" verbatim="If not found" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: algol 68" verbatim="ALGOL 68" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: returns bool: true or false, and position in ref i" verbatim="returns BOOL: TRUE or FALSE, and position in REF INT pos." row="1" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: (char, can contain more them one char, in which ca" verbatim="(char, can contain more them one char, in which case the position of the first appearance of any of them is returned.)" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: freebasic" verbatim="FreeBASIC" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,2: returns 0" verbatim="returns 0" row="2" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: " verbatim="" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: c, c++ ( only, returns pointer to character)" verbatim="C, C++ ( only, returns pointer to character)" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,2: returns null" verbatim="returns NULL" row="3" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: " verbatim="" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: d" verbatim="D" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,2: returns -1" verbatim="returns -1" row="4" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: " verbatim="" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: c++ (stl)" verbatim="C++ (STL)" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,2: returns std::string::npos" verbatim="returns std::string::npos" row="5" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: " verbatim="" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: seed7" verbatim="Seed7" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,2: returns 0" verbatim="returns 0" row="6" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: " verbatim="" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: go" verbatim="Go" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,2: returns -1" verbatim="returns -1" row="7" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: " verbatim="" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: java, javascript" verbatim="Java, JavaScript" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,2: returns -1" verbatim="returns -1" row="8" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: " verbatim="" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: vb .net, c#, windows powershell, f#" verbatim="VB .NET, C#, Windows PowerShell, F#" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,2: returns -1" verbatim="returns -1" row="9" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: " verbatim="" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: common lisp" verbatim="Common Lisp" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,2: returns nil" verbatim="returns NIL" row="10" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: " verbatim="" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: islisp" verbatim="ISLISP" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,2: returns" verbatim="returns" row="11" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: " verbatim="" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: haskell (returns just index)" verbatim="Haskell (returns Just index)" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,2: returns nothing" verbatim="returns Nothing" row="12" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: " verbatim="" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: ocaml" verbatim="OCaml" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,2: raises not_found" verbatim="raises Not_found" row="13" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,0: " verbatim="" row="14" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,1: fortran" verbatim="Fortran" row="14" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,2: returns zero" verbatim="returns zero" row="14" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,0: " verbatim="" row="15" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,1: smalltalk" verbatim="Smalltalk" row="15" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,2: evaluate which is a (or any object understanding v" verbatim="evaluate  which is a  (or any object understanding value) &#xA; returns 0 &#xA; returns  or" row="15" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,0: " verbatim="" row="16" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,1: pl/i" verbatim="PL/I" row="16" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,2: returns 0 (positions start at 1)" verbatim="returns 0 (positions start at 1)" row="16" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Format">
    <cells xsi:type="pcmmm:Header" name="0,0: definition" verbatim="Definition" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="0,1: returns string" verbatim="returns string" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="1,0: description" verbatim="Description" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: returns the formatted string representation of one" verbatim="Returns the formatted string representation of one or more items." row="1" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="Format">
    <cells xsi:type="pcmmm:Header" name="0,0: format" verbatim="Format" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: languages" verbatim="Languages" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: format string syntax" verbatim="Format string syntax" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: algol 68" verbatim="ALGOL 68" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: algol" verbatim="ALGOL" row="1" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: " verbatim="" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: vb" verbatim="VB" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,2: " verbatim="" row="2" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: " verbatim="" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: perl, php, ruby" verbatim="Perl, PHP, Ruby" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,2: c" verbatim="C" row="3" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: " verbatim="" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: erlang" verbatim="Erlang" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,2: " verbatim="" row="4" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: " verbatim="" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: c" verbatim="C" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,2: c" verbatim="C" row="5" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: " verbatim="" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: d" verbatim="D" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,2: c" verbatim="C" row="6" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: " verbatim="" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: object pascal (delphi)" verbatim="Object Pascal (Delphi)" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,2: " verbatim="" row="7" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: " verbatim="" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: go" verbatim="Go" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,2: c" verbatim="C" row="8" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: " verbatim="" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: bash shell" verbatim="Bash shell" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,2: c" verbatim="C" row="9" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: " verbatim="" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: python, ruby" verbatim="Python, Ruby" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,2: c" verbatim="C" row="10" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: " verbatim="" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: python 3.x" verbatim="Python 3.x" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,2: .net" verbatim=".NET" row="11" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: " verbatim="" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: ocaml, f#" verbatim="OCaml, F#" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,2: c" verbatim="C" row="12" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: " verbatim="" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: haskell (ghc)" verbatim="Haskell (GHC)" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,2: c" verbatim="C" row="13" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,0: " verbatim="" row="14" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,1: java" verbatim="Java" row="14" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,2: c" verbatim="C" row="14" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,0: " verbatim="" row="15" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,1: vb .net, c#, f#" verbatim="VB .NET, C#, F#" row="15" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,2: .net" verbatim=".NET" row="15" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,0: " verbatim="" row="16" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,1: scheme (srfi 28)" verbatim="Scheme (SRFI 28)" row="16" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,2: lisp" verbatim="Lisp" row="16" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,0: " verbatim="" row="17" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,1: common lisp" verbatim="Common Lisp" row="17" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,2: lisp" verbatim="Lisp" row="17" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,0: " verbatim="" row="18" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,1: clojure" verbatim="Clojure" row="18" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,2: lisp" verbatim="Lisp" row="18" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,0: " verbatim="" row="19" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,1: windows powershell" verbatim="Windows PowerShell" row="19" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,2: .net" verbatim=".NET" row="19" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,0: " verbatim="" row="20" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,1: objective-c ( only)" verbatim="Objective-C ( only)" row="20" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,2: c" verbatim="C" row="20" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="21,0: " verbatim="" row="21" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="21,1: lua" verbatim="Lua" row="21" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="21,2: c" verbatim="C" row="21" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="22,0: " verbatim="" row="22" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="22,1: fortran" verbatim="Fortran" row="22" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="22,2: fortran" verbatim="Fortran" row="22" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="23,0: " verbatim="" row="23" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="23,1: pl/i" verbatim="PL/I" row="23" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="23,2: pl/i (similar to fortran)" verbatim="PL/I (similar to Fortran)" row="23" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Inequality">
    <cells xsi:type="pcmmm:Header" name="0,0: format" verbatim="Format" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: languages" verbatim="Languages" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: algol 68 - note: the operator &quot;ne&quot; is literally in" verbatim="ALGOL 68 - note: the operator &quot;ne&quot; is literally in bold type-font." row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: " verbatim="" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: algol 68, ada, erlang, fortran, haskell" verbatim="ALGOL 68, Ada, Erlang, Fortran, Haskell" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: " verbatim="" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: basic, vb, vb .net, pascal, object pascal (delphi)" verbatim="BASIC, VB, VB .NET, Pascal, Object Pascal (Delphi), OCaml, PHP, Seed7, Standard ML, F#" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: " verbatim="" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: basic (some implementations)" verbatim="BASIC (some implementations)" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: " verbatim="" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: perl" verbatim="Perl" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: " verbatim="" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: scheme (srfi 13)" verbatim="Scheme (SRFI 13)" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: " verbatim="" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: common lisp" verbatim="Common Lisp" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: " verbatim="" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: islisp" verbatim="ISLISP" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: " verbatim="" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: clojure" verbatim="Clojure" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: " verbatim="" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: c++ (stl), c#, go, javascript (not similar), php (" verbatim="C++ (STL), C#, Go, JavaScript (not similar), PHP (not similar), Python, Ruby, D, Mathematica" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: " verbatim="" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: javascript, php" verbatim="JavaScript, PHP" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: " verbatim="" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: rexx" verbatim="REXX" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: " verbatim="" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: pl/i" verbatim="PL/I" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,0: " verbatim="" row="14" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,1: bourne shell" verbatim="Bourne Shell" row="14" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,0: " verbatim="" row="15" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,1: windows powershell" verbatim="Windows PowerShell" row="15" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,0: " verbatim="" row="16" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,1: lua, smalltalk" verbatim="Lua, Smalltalk" row="16" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="join">
    <cells xsi:type="pcmmm:Header" name="0,0: definition" verbatim="Definition" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="0,1: returns a list of strings joined with a separator" verbatim="returns a list of strings joined with a separator" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="1,0: description" verbatim="Description" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: joins the list of strings into a new string, with " verbatim="Joins the list of strings into a new string, with the separator string between each of the substrings. Opposite of split." row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: related" verbatim="Related" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: sprintf" verbatim="sprintf" row="2" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="join">
    <cells xsi:type="pcmmm:Header" name="0,0: format" verbatim="Format" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: languages" verbatim="Languages" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: d" verbatim="D" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: " verbatim="" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: erlang" verbatim="Erlang" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: " verbatim="" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: perl, php" verbatim="Perl, PHP" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: " verbatim="" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: php" verbatim="PHP" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: " verbatim="" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: python" verbatim="Python" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: " verbatim="" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: ruby, javascript" verbatim="Ruby, JavaScript" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: " verbatim="" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: scheme (srfi 13)" verbatim="Scheme (SRFI 13)" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: " verbatim="" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: common lisp" verbatim="Common Lisp" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: " verbatim="" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: clojure" verbatim="Clojure" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: " verbatim="" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: go" verbatim="Go" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: " verbatim="" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: seed7" verbatim="Seed7" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: " verbatim="" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: ocaml" verbatim="OCaml" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: " verbatim="" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: standard ml" verbatim="Standard ML" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,0: " verbatim="" row="14" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,1: haskell (ghc 6.8+)" verbatim="Haskell (GHC 6.8+)" row="14" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,0: " verbatim="" row="15" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,1: vb" verbatim="VB" row="15" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,0: " verbatim="" row="16" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,1: vb .net, c#, f#" verbatim="VB .NET, C#, F#" row="16" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,0: " verbatim="" row="17" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,1: windows powershell" verbatim="Windows PowerShell" row="17" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,0: " verbatim="" row="18" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,1: objective-c ( only)" verbatim="Objective-C ( only)" row="18" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,0: " verbatim="" row="19" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,1: lua" verbatim="Lua" row="19" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,0: " verbatim="" row="20" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,1: smalltalk (squeak, pharo)" verbatim="Smalltalk (Squeak, Pharo)" row="20" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="left">
    <cells xsi:type="pcmmm:Header" name="0,0: definition" verbatim="Definition" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="0,1: returns string" verbatim="returns string" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="1,0: description" verbatim="Description" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: returns the left n part of a string. if n is great" verbatim="Returns the left n part of a string. If n is greater than the length of the string then most implementations return the whole string (exceptions exist - see code examples)." row="1" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="left">
    <cells xsi:type="pcmmm:Header" name="0,0: format" verbatim="Format" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: languages" verbatim="Languages" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: ada" verbatim="Ada" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: " verbatim="" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: erlang" verbatim="Erlang" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: " verbatim="" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: vb" verbatim="VB" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: " verbatim="" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: basic" verbatim="BASIC" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: " verbatim="" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: freebasic, ingres" verbatim="FreeBASIC, Ingres" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: " verbatim="" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: rexx, erlang" verbatim="REXX, Erlang" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: " verbatim="" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: awk (changes string), perl, php" verbatim="AWK (changes string), Perl, PHP" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: " verbatim="" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: go, python" verbatim="Go, Python" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: " verbatim="" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: ruby" verbatim="Ruby" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: " verbatim="" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: c" verbatim="C" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: " verbatim="" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: c++ (stl)" verbatim="C++ (STL)" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: " verbatim="" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: d" verbatim="D" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: " verbatim="" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: seed7" verbatim="Seed7" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,0: " verbatim="" row="14" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,1: vb .net, c#, windows powershell, f#" verbatim="VB .NET, C#, Windows PowerShell, F#" row="14" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,0: " verbatim="" row="15" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,1: pascal, object pascal (delphi)" verbatim="Pascal, Object Pascal (Delphi)" row="15" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,0: " verbatim="" row="16" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,1: java, javascript" verbatim="Java, JavaScript" row="16" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,0: " verbatim="" row="17" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,1: scheme (srfi 13)" verbatim="Scheme (SRFI 13)" row="17" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,0: " verbatim="" row="18" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,1: haskell" verbatim="Haskell" row="18" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,0: " verbatim="" row="19" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,1: clojure" verbatim="Clojure" row="19" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,0: " verbatim="" row="20" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,1: objective-c ( only)" verbatim="Objective-C ( only)" row="20" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="21,0: " verbatim="" row="21" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="21,1: standard ml" verbatim="Standard ML" row="21" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="22,0: " verbatim="" row="22" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="22,1: ocaml" verbatim="OCaml" row="22" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="23,0: " verbatim="" row="23" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="23,1: f#" verbatim="F#" row="23" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="24,0: " verbatim="" row="24" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="24,1: lua" verbatim="Lua" row="24" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="25,0: " verbatim="" row="25" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="25,1: smalltalk (squeak, pharo)" verbatim="Smalltalk (Squeak, Pharo)" row="25" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="26,0: " verbatim="" row="26" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="26,1: fortran" verbatim="Fortran" row="26" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="27,0: " verbatim="" row="27" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="27,1: mathematica" verbatim="Mathematica" row="27" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="length">
    <cells xsi:type="pcmmm:Header" name="0,0: definition" verbatim="Definition" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="0,1: returns an integer number" verbatim="returns an integer number" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="1,0: description" verbatim="Description" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: returns the length of a string (not counting the n" verbatim="Returns the length of a string (not counting the null terminator or any other of the string's internal structural information). An empty string returns a length of 0." row="1" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="length">
    <cells xsi:type="pcmmm:Header" name="0,0: format" verbatim="Format" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: returns" verbatim="Returns" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: languages" verbatim="Languages" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: " verbatim="" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: ada" verbatim="Ada" row="1" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: " verbatim="" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: " verbatim="" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,2: algol 68" verbatim="ALGOL 68" row="2" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: " verbatim="" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: " verbatim="" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,2: ingres, perl, pascal, object pascal (delphi), rexx" verbatim="Ingres, Perl,  Pascal, Object Pascal (Delphi), REXX, Seed7, SQL, PL/I" row="3" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: " verbatim="" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: " verbatim="" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,2: basic, freebasic, python, go" verbatim="BASIC, FreeBASIC, Python, Go" row="4" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: " verbatim="" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: " verbatim="" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,2: erlang" verbatim="Erlang" row="5" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: " verbatim="" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: " verbatim="" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,2: vb" verbatim="VB" row="6" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: " verbatim="" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: number of 16-bit utf-16-encoded blocks" verbatim="Number of 16-bit UTF-16-encoded blocks" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,2: vb .net, c#, windows powershell, f#" verbatim="VB .NET, C#, Windows PowerShell, F#" row="7" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: " verbatim="" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: number of bytes" verbatim="Number of bytes" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,2: ruby" verbatim="Ruby" row="8" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: " verbatim="" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: number of bytes" verbatim="Number of bytes" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,2: c, php" verbatim="C, PHP" row="9" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: " verbatim="" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: " verbatim="" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,2: c++ (stl)" verbatim="C++ (STL)" row="10" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: " verbatim="" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: " verbatim="" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,2: d, javascript" verbatim="D, JavaScript" row="11" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: " verbatim="" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: number of 16-bit utf-16-encoded blocks" verbatim="Number of 16-bit UTF-16-encoded blocks" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,2: java" verbatim="Java" row="12" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: " verbatim="" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: " verbatim="" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,2: scheme" verbatim="Scheme" row="13" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,0: " verbatim="" row="14" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,1: " verbatim="" row="14" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,2: common lisp, islisp" verbatim="Common Lisp, ISLISP" row="14" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,0: " verbatim="" row="15" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,1: " verbatim="" row="15" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,2: clojure" verbatim="Clojure" row="15" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,0: " verbatim="" row="16" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,1: " verbatim="" row="16" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,2: ocaml" verbatim="OCaml" row="16" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,0: " verbatim="" row="17" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,1: " verbatim="" row="17" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,2: standard ml" verbatim="Standard ML" row="17" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,0: " verbatim="" row="18" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,1: number of unicode codepoints" verbatim="Number of Unicode codepoints" row="18" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,2: haskell" verbatim="Haskell" row="18" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,0: " verbatim="" row="19" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,1: " verbatim="" row="19" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,2: objective-c ( only)" verbatim="Objective-C ( only)" row="19" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,0: " verbatim="" row="20" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,1: " verbatim="" row="20" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,2: lua" verbatim="Lua" row="20" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="21,0: " verbatim="" row="21" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="21,1: " verbatim="" row="21" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="21,2: smalltalk" verbatim="Smalltalk" row="21" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="22,0: " verbatim="" row="22" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="22,1: " verbatim="" row="22" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="22,2: fortran" verbatim="Fortran" row="22" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="23,0: " verbatim="" row="23" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="23,1: " verbatim="" row="23" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="23,2: mathematica" verbatim="Mathematica" row="23" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="24,0: or" verbatim="or" row="24" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="24,1: number of bytes as" verbatim="number of bytes as" row="24" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="24,2: ya" verbatim="Ya" row="24" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="Lowercase">
    <cells xsi:type="pcmmm:Header" name="0,0: definition" verbatim="Definition" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="0,1: returns string" verbatim="returns string" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="1,0: description" verbatim="Description" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: returns the string in lower case." verbatim="Returns the string in lower case." row="1" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="Lowercase">
    <cells xsi:type="pcmmm:Header" name="0,0: format" verbatim="Format" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: languages" verbatim="Languages" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: vb" verbatim="VB" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: " verbatim="" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: freebasic" verbatim="FreeBASIC" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: " verbatim="" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: perl" verbatim="Perl" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: " verbatim="" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: c" verbatim="C" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: " verbatim="" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: d" verbatim="D" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: " verbatim="" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: c++" verbatim="C++" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: " verbatim="" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: object pascal (delphi)" verbatim="Object Pascal (Delphi)" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: " verbatim="" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: php" verbatim="PHP" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: " verbatim="" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: seed7" verbatim="Seed7" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: " verbatim="" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: unix" verbatim="Unix" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: " verbatim="" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: python" verbatim="Python" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: " verbatim="" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: ruby" verbatim="Ruby" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: " verbatim="" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: go" verbatim="Go" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,0: " verbatim="" row="14" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,1: scheme (r6rs), common lisp" verbatim="Scheme (R6RS), Common Lisp" row="14" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,0: " verbatim="" row="15" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,1: clojure" verbatim="Clojure" row="15" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,0: " verbatim="" row="16" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,1: ocaml" verbatim="OCaml" row="16" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,0: " verbatim="" row="17" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,1: standard ml" verbatim="Standard ML" row="17" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,0: " verbatim="" row="18" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,1: haskell" verbatim="Haskell" row="18" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,0: " verbatim="" row="19" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,1: java, javascript" verbatim="Java, JavaScript" row="19" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,0: " verbatim="" row="20" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,1: erlang" verbatim="Erlang" row="20" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="21,0: " verbatim="" row="21" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="21,1: vb .net, c#, windows powershell, f#" verbatim="VB .NET, C#, Windows PowerShell, F#" row="21" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="22,0: " verbatim="" row="22" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="22,1: objective-c ( only)" verbatim="Objective-C ( only)" row="22" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="23,0: " verbatim="" row="23" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="23,1: lua" verbatim="Lua" row="23" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="24,0: " verbatim="" row="24" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="24,1: smalltalk" verbatim="Smalltalk" row="24" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="25,0: " verbatim="" row="25" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="25,1: sql" verbatim="SQL" row="25" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="26,0: " verbatim="" row="26" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="26,1: pl/i" verbatim="PL/I" row="26" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="27,0: " verbatim="" row="27" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="27,1: mathematica" verbatim="Mathematica" row="27" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="partition">
    <cells xsi:type="pcmmm:Header" name="0,0: definition" verbatim="Definition" rowspan="1" colspan="1"/>
  </matrices>
  <matrices name="partition">
    <cells xsi:type="pcmmm:Header" name="0,0: format" verbatim="Format" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: languages" verbatim="Languages" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: python, ruby(1.9+)" verbatim="Python, Ruby(1.9+)" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: " verbatim="" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: erlang" verbatim="Erlang" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: " verbatim="" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: perl" verbatim="Perl" row="3" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="replace">
    <cells xsi:type="pcmmm:Header" name="0,0: definition" verbatim="Definition" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="0,1: returns string" verbatim="returns string" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="1,0: description" verbatim="Description" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: returns a string with find occurrences changed to " verbatim="Returns a string with find occurrences changed to replace." row="1" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="replace">
    <cells xsi:type="pcmmm:Header" name="0,0: format" verbatim="Format" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: languages" verbatim="Languages" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: rexx" verbatim="REXX" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: " verbatim="" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: d" verbatim="D" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: " verbatim="" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: vb" verbatim="VB" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: " verbatim="" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: seed7" verbatim="Seed7" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: " verbatim="" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: vb .net, c#, f#" verbatim="VB .NET, C#, F#" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: " verbatim="" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: php" verbatim="PHP" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: " verbatim="" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: erlang" verbatim="Erlang" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: " verbatim="" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: python, java (1.5+)" verbatim="Python, Java (1.5+)" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: " verbatim="" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: java" verbatim="Java" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: " verbatim="" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: ruby" verbatim="Ruby" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: " verbatim="" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: perl" verbatim="Perl" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: " verbatim="" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: javascript" verbatim="JavaScript" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: " verbatim="" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: unix" verbatim="Unix" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,0: " verbatim="" row="14" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,1: windows powershell" verbatim="Windows PowerShell" row="14" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,0: " verbatim="" row="15" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,1: ocaml" verbatim="OCaml" row="15" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,0: " verbatim="" row="16" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,1: objective-c ( only)" verbatim="Objective-C ( only)" row="16" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,0: " verbatim="" row="17" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,1: lua" verbatim="Lua" row="17" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,0: " verbatim="" row="18" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,1: smalltalk (squeak, pharo)" verbatim="Smalltalk (Squeak, Pharo)" row="18" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,0: " verbatim="" row="19" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,1: tcl" verbatim="Tcl" row="19" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,0: " verbatim="" row="20" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,1: mathematica" verbatim="Mathematica" row="20" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="21,0: " verbatim="" row="21" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="21,1: go" verbatim="Go" row="21" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="reverse">
    <cells xsi:type="pcmmm:Header" name="0,0: definition" verbatim="Definition" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="0,1: " verbatim="" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="1,0: description" verbatim="Description" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: reverses the order of the characters in the string" verbatim="Reverses the order of the characters in the string." row="1" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="reverse">
    <cells xsi:type="pcmmm:Header" name="0,0: format" verbatim="Format" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: languages" verbatim="Languages" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: perl, haskell" verbatim="Perl, Haskell" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: " verbatim="" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: erlang" verbatim="Erlang" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: " verbatim="" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: php" verbatim="PHP" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: " verbatim="" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: python" verbatim="Python" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: " verbatim="" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: scheme (srfi 13)" verbatim="Scheme (SRFI 13)" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: " verbatim="" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: common lisp" verbatim="Common Lisp" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: " verbatim="" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: ruby, d (modifies string)" verbatim="Ruby, D (modifies string)" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: " verbatim="" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: java" verbatim="Java" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: " verbatim="" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: c++ ( only, modifies string)" verbatim="C++ ( only, modifies string)" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: " verbatim="" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: vb" verbatim="VB" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: " verbatim="" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: vb .net, c#" verbatim="VB .NET, C#" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: " verbatim="" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: standard ml" verbatim="Standard ML" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: " verbatim="" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: javascript" verbatim="JavaScript" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,0: " verbatim="" row="14" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,1: lua" verbatim="Lua" row="14" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,0: " verbatim="" row="15" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,1: smalltalk" verbatim="Smalltalk" row="15" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,0: " verbatim="" row="16" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,1: mathematica" verbatim="Mathematica" row="16" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,0: " verbatim="" row="17" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,1: pl/i" verbatim="PL/I" row="17" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="rfind">
    <cells xsi:type="pcmmm:Header" name="0,0: definition" verbatim="Definition" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="0,1: returns integer" verbatim="returns integer" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="1,0: description" verbatim="Description" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: returns the position of the start of the last occu" verbatim="Returns the position of the start of the last occurrence of substring in string. If the substring is not found most of these routines return an invalid index value &#x2013; -1 where indexes are 0-based, 0 where they are 1-based &#x2013; or some value to be interpreted as Boolean FALSE." row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: related" verbatim="Related" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: instr" verbatim="instr" row="2" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="rfind">
    <cells xsi:type="pcmmm:Header" name="0,0: format" verbatim="Format" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: languages" verbatim="Languages" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,2: if not found" verbatim="If not found" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: vb" verbatim="VB" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,2: returns 0" verbatim="returns 0" row="1" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: " verbatim="" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: freebasic" verbatim="FreeBASIC" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,2: returns 0" verbatim="returns 0" row="2" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: " verbatim="" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: perl" verbatim="Perl" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,2: returns -1" verbatim="returns -1" row="3" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: " verbatim="" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: php" verbatim="PHP" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,2: returns false" verbatim="returns FALSE" row="4" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: " verbatim="" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: c++ (stl)" verbatim="C++ (STL)" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,2: returns std::string::npos" verbatim="returns std::string::npos" row="5" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: " verbatim="" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: d" verbatim="D" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,2: returns -1" verbatim="returns -1" row="6" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: " verbatim="" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: python" verbatim="Python" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,2: returns -1" verbatim="returns -1" row="7" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: " verbatim="" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: seed7" verbatim="Seed7" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,2: returns 0" verbatim="returns 0" row="8" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: " verbatim="" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: ruby" verbatim="Ruby" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,2: returns nil" verbatim="returns nil" row="9" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: " verbatim="" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: go" verbatim="Go" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,2: returns -1" verbatim="returns -1" row="10" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: " verbatim="" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: java, javascript" verbatim="Java, JavaScript" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,2: returns -1" verbatim="returns -1" row="11" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: " verbatim="" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: vb .net, c#, windows powershell, f#" verbatim="VB .NET, C#, Windows PowerShell, F#" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,2: returns -1" verbatim="returns -1" row="12" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: " verbatim="" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: common lisp" verbatim="Common Lisp" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,2: returns nil" verbatim="returns NIL" row="13" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,0: " verbatim="" row="14" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,1: objective-c ( only)" verbatim="Objective-C ( only)" row="14" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,2: returns nsnotfound" verbatim="returns NSNotFound" row="14" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,0: " verbatim="" row="15" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,1: ocaml" verbatim="OCaml" row="15" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,2: raises not_found" verbatim="raises Not_found" row="15" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,0: " verbatim="" row="16" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,1: lua" verbatim="Lua" row="16" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,2: returns nil" verbatim="returns nil" row="16" rowspan="1" column="2" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,0: " verbatim="" row="17" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,1: ada" verbatim="Ada" row="17" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,2: returns 0" verbatim="returns 0" row="17" rowspan="1" column="2" colspan="1"/>
  </matrices>
  <matrices name="right">
    <cells xsi:type="pcmmm:Header" name="0,0: definition" verbatim="Definition" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="0,1: returns string" verbatim="returns string" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="1,0: description" verbatim="Description" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: returns the right n part of a string. if n is grea" verbatim="Returns the right n part of a string. If n is greater than the length of the string then most implementations return the whole string (exceptions exist - see code examples)." row="1" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="right">
    <cells xsi:type="pcmmm:Header" name="0,0: format" verbatim="Format" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: languages" verbatim="Languages" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: ada" verbatim="Ada" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: " verbatim="" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: vb" verbatim="VB" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: " verbatim="" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: basic" verbatim="BASIC" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: " verbatim="" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: freebasic, ingres" verbatim="FreeBASIC, Ingres" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: (n must not be greater than the length of string)" verbatim="(n must not be greater than the length of string)" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: c" verbatim="C" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: " verbatim="" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: c#" verbatim="C#" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: " verbatim="" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: java" verbatim="Java" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: " verbatim="" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: javascript" verbatim="JavaScript" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: " verbatim="" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: rexx, erlang" verbatim="REXX, Erlang" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: " verbatim="" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: perl, php" verbatim="Perl, PHP" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: " verbatim="" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: python" verbatim="Python" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: " verbatim="" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: scheme (srfi 13)" verbatim="Scheme (SRFI 13)" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: " verbatim="" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: ruby, ya" verbatim="Ruby, Ya" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,0: " verbatim="" row="14" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,1: d" verbatim="D" row="14" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,0: " verbatim="" row="15" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,1: ocaml" verbatim="OCaml" row="15" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,0: " verbatim="" row="16" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,1: lua" verbatim="Lua" row="16" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,0: " verbatim="" row="17" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,1: smalltalk (squeak, pharo)" verbatim="Smalltalk (Squeak, Pharo)" row="17" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,0: " verbatim="" row="18" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,1: mathematica" verbatim="Mathematica" row="18" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="rpartition">
    <cells xsi:type="pcmmm:Header" name="0,0: definition" verbatim="Definition" rowspan="1" colspan="1"/>
  </matrices>
  <matrices name="rpartition">
    <cells xsi:type="pcmmm:Header" name="0,0: format" verbatim="Format" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: languages" verbatim="Languages" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: python, ruby" verbatim="Python, Ruby" row="1" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="split">
    <cells xsi:type="pcmmm:Header" name="0,0: definition" verbatim="Definition" rowspan="1" colspan="1"/>
  </matrices>
  <matrices name="split">
    <cells xsi:type="pcmmm:Header" name="0,0: format" verbatim="Format" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: languages" verbatim="Languages" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: perl" verbatim="Perl" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: " verbatim="" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: php" verbatim="PHP" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: " verbatim="" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: python" verbatim="Python" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: " verbatim="" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: javascript, java, ruby" verbatim="Javascript, Java, Ruby" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: " verbatim="" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: erlang" verbatim="Erlang" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: " verbatim="" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: go" verbatim="Go" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: " verbatim="" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: scheme (srfi 13)" verbatim="Scheme (SRFI 13)" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: " verbatim="" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: vb" verbatim="VB" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: " verbatim="" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: vb .net, c#, f#" verbatim="VB .NET, C#, F#" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: " verbatim="" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: windows powershell" verbatim="Windows PowerShell" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: " verbatim="" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: ocaml" verbatim="OCaml" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: " verbatim="" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: d" verbatim="D" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: " verbatim="" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: objective-c ( only)" verbatim="Objective-C ( only)" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,0: " verbatim="" row="14" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,1: object pascal" verbatim="Object Pascal" row="14" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,0: " verbatim="" row="15" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,1: mathematica" verbatim="Mathematica" row="15" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="substring">
    <cells xsi:type="pcmmm:Header" name="0,0: definition" verbatim="Definition" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="0,1: returns string returns string" verbatim="returns string &#xA;  returns string" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="1,0: description" verbatim="Description" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: returns a substring of string between starting at " verbatim="Returns a substring of string between starting at startpos and endpos, or starting at startpos of length numChars.  The resulting string is truncated if there are fewer than numChars characters beyond the starting point. endpos represents the index after the last character in the substring." row="1" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="substring">
    <cells xsi:type="pcmmm:Header" name="0,0: format" verbatim="Format" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: languages" verbatim="Languages" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: algol 68 (changes base index)" verbatim="ALGOL 68 (changes base index)" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: " verbatim="" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: ada (changes base index)" verbatim="Ada (changes base index)" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: " verbatim="" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: vb" verbatim="VB" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: " verbatim="" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: freebasic" verbatim="FreeBASIC" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: " verbatim="" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: basic" verbatim="BASIC" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: " verbatim="" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: awk (changes string), perl, php" verbatim="AWK (changes string), Perl, PHP" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: " verbatim="" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: rexx" verbatim="REXX" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: " verbatim="" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: python, go" verbatim="Python, Go" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: " verbatim="" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: ruby" verbatim="Ruby" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: " verbatim="" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: seed7" verbatim="Seed7" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: " verbatim="" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: javascript" verbatim="JavaScript" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: " verbatim="" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: c++ (stl), javascript" verbatim="C++ (STL), JavaScript" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: " verbatim="" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: vb .net, c#, windows powershell, f#" verbatim="VB .NET, C#, Windows PowerShell, F#" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,0: " verbatim="" row="14" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,1: java, javascript" verbatim="Java, JavaScript" row="14" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,0: " verbatim="" row="15" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,1: object pascal (delphi)" verbatim="Object Pascal (Delphi)" row="15" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,0: " verbatim="" row="16" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,1: scheme" verbatim="Scheme" row="16" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,0: " verbatim="" row="17" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,1: common lisp" verbatim="Common Lisp" row="17" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,0: " verbatim="" row="18" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,1: islisp" verbatim="ISLISP" row="18" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,0: " verbatim="" row="19" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,1: ocaml" verbatim="OCaml" row="19" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,0: " verbatim="" row="20" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,1: standard ml" verbatim="Standard ML" row="20" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="21,0: " verbatim="" row="21" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="21,1: erlang" verbatim="Erlang" row="21" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="22,0: " verbatim="" row="22" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="22,1: c" verbatim="C" row="22" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="23,0: " verbatim="" row="23" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="23,1: d" verbatim="D" row="23" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="24,0: " verbatim="" row="24" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="24,1: haskell" verbatim="Haskell" row="24" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="25,0: " verbatim="" row="25" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="25,1: objective-c ( only)" verbatim="Objective-C ( only)" row="25" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="26,0: " verbatim="" row="26" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="26,1: f#" verbatim="F#" row="26" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="27,0: " verbatim="" row="27" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="27,1: lua" verbatim="Lua" row="27" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="28,0: " verbatim="" row="28" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="28,1: smalltalk" verbatim="Smalltalk" row="28" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="29,0: " verbatim="" row="29" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="29,1: fortran" verbatim="Fortran" row="29" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="30,0: " verbatim="" row="30" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="30,1: sql" verbatim="SQL" row="30" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="31,0: " verbatim="" row="31" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="31,1: mathematica" verbatim="Mathematica" row="31" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="32,0: " verbatim="" row="32" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="32,1: ya" verbatim="Ya" row="32" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="Uppercase">
    <cells xsi:type="pcmmm:Header" name="0,0: definition" verbatim="Definition" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="0,1: returns string" verbatim="returns string" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="1,0: description" verbatim="Description" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: returns the string in upper case." verbatim="Returns the string in upper case." row="1" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="Uppercase">
    <cells xsi:type="pcmmm:Header" name="0,0: format" verbatim="Format" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: languages" verbatim="Languages" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: vb" verbatim="VB" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: " verbatim="" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: freebasic" verbatim="FreeBASIC" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: " verbatim="" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: awk (changes string)" verbatim="AWK (changes string)" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: " verbatim="" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: perl" verbatim="Perl" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: " verbatim="" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: c (operates on one character)" verbatim="C (operates on one character)" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: " verbatim="" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: c (string / char array)" verbatim="C (string / char array)" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: " verbatim="" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: d" verbatim="D" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: " verbatim="" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: c++" verbatim="C++" row="8" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,0: " verbatim="" row="9" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="9,1: object pascal (delphi)" verbatim="Object Pascal (Delphi)" row="9" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,0: " verbatim="" row="10" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="10,1: object pascal (delphi) (operates on one character)" verbatim="Object Pascal (Delphi) (operates on one character)" row="10" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,0: " verbatim="" row="11" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="11,1: php" verbatim="PHP" row="11" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,0: " verbatim="" row="12" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="12,1: seed7" verbatim="Seed7" row="12" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,0: " verbatim="" row="13" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="13,1: unix" verbatim="Unix" row="13" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,0: , or , or" verbatim=", or&#xA;, or" row="14" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="14,1: rexx" verbatim="REXX" row="14" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,0: " verbatim="" row="15" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="15,1: python" verbatim="Python" row="15" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,0: " verbatim="" row="16" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="16,1: ruby" verbatim="Ruby" row="16" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,0: " verbatim="" row="17" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="17,1: go" verbatim="Go" row="17" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,0: " verbatim="" row="18" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="18,1: scheme, common lisp" verbatim="Scheme, Common Lisp" row="18" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,0: " verbatim="" row="19" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="19,1: ocaml" verbatim="OCaml" row="19" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,0: " verbatim="" row="20" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="20,1: standard ml" verbatim="Standard ML" row="20" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="21,0: " verbatim="" row="21" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="21,1: haskell" verbatim="Haskell" row="21" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="22,0: " verbatim="" row="22" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="22,1: java, javascript" verbatim="Java, JavaScript" row="22" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="23,0: " verbatim="" row="23" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="23,1: erlang" verbatim="Erlang" row="23" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="24,0: " verbatim="" row="24" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="24,1: vb .net, c#, windows powershell, f#" verbatim="VB .NET, C#, Windows PowerShell, F#" row="24" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="25,0: " verbatim="" row="25" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="25,1: objective-c ( only)" verbatim="Objective-C ( only)" row="25" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="26,0: " verbatim="" row="26" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="26,1: lua" verbatim="Lua" row="26" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="27,0: " verbatim="" row="27" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="27,1: smalltalk" verbatim="Smalltalk" row="27" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="28,0: " verbatim="" row="28" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="28,1: sql" verbatim="SQL" row="28" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="29,0: " verbatim="" row="29" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="29,1: mathematica" verbatim="Mathematica" row="29" rowspan="1" column="1" colspan="1"/>
  </matrices>
  <matrices name="trim">
    <cells xsi:type="pcmmm:Header" name="0,0: format" verbatim="Format" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Header" name="0,1: languages" verbatim="Languages" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,0: " verbatim="" row="1" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="1,1: c#" verbatim="C#" row="1" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,0: " verbatim="" row="2" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="2,1: common lisp" verbatim="Common Lisp" row="2" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,0: " verbatim="" row="3" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="3,1: go" verbatim="Go" row="3" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,0: " verbatim="" row="4" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="4,1: java" verbatim="Java" row="4" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,0: " verbatim="" row="5" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="5,1: javascript" verbatim="JavaScript" row="5" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,0: " verbatim="" row="6" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="6,1: mathematica" verbatim="Mathematica" row="6" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,0: " verbatim="" row="7" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="7,1: php" verbatim="PHP" row="7" rowspan="1" column="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,0: " verbatim="" row="8" rowspan="1" colspan="1"/>
    <cells xsi:type="pcmmm:Extra" name="8,1: python" verbatim="Python" row="8" rowspan="1" column="1" colspan="1"/>
  </matrices>
</pcmmm:PCM>
